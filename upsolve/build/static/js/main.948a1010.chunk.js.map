{"version":3,"sources":["Leaderboard/entry.js","constants.js","Api/problem.api.js","Leaderboard/leaderboard.js","Api/auth.api.js","NavigationMenu.js","Leaderboard/LeaderboardPage.js","Challenge/ChallengeTimer.js","Challenge/ProblemCardTitle.js","Challenge/ProblemDescription.js","Challenge/ChallengeDailyQues.js","Challenge/ChallengeUpsolveQues.js","Challenge/ChallengeContent.js","authGaurd.js","Challenge/Challenge.js","BoxTitile.js","loginPage.js","models/UpsolveText.js","HomePage.js","LogoutPage.js","ErroPage.js","Profile/ProfilePage.js","Profile/ProfileRoute.js","RegisterPage.js","App.js","reportWebVitals.js","index.js"],"names":["Entry","this","props","id","percentage","parseInt","streak","to","name","style","textDecoration","class","offset","className","value","text","styles","root","path","stroke","strokeLinecap","transition","transformOrigin","trail","fill","fontSize","fontWeight","background","React","Component","config","url","cf","toString","getUser","a","fetch","then","res","json","getUserByname","username","type","payload","problem","index","contestId","skip","limit","filter","country","institution","Leaderboard","useState","items","setItems","setskip","count","setcount","loading","setloading","useEffect","LeaderboardList","result","data","board","push","Skeleton","variant","width","height","length","forEach","el","i","containerClassName","pageCount","Math","ceil","pageRangeDisplayed","marginPagesDisplayed","initialPage","previousLabel","nextLabel","activeClassName","onPageChange","e","selected","color","getToken","window","localStorage","getItem","TokenAuthentication","token","JSON","parse","atob","split","loginProcess","password","method","headers","body","stringify","status","setItem","location","updateUser","firstName","lastName","bio","catch","err","registrationProcess","getFirstName","users","console","log","NavigationMenu","setstatus","setpayload","open","setOpen","onClick","Tooltip","title","arrow","href","top","left","data-toogle","data-palcement","removeItem","LeaderboardPage","country_list","require","countries","getNames","map","setfilter","action","for","onChange","target","disabled","ChallengeTimer","Date","timer","settimer","setInterval","textShadow","hours","getHours","minutes","getMinutes","seconds","getSeconds","ProblemCardTitle","undefined","upsolve","solved","ProblemDescription","checking","setchecking","Error","link","rating","Check","updatesolved","updateupsolve","margin","borderRadius","role","refresh","ChallengeDailyQues","setproblem","setsolved","_id","user","dailyQuestion","problemError","setproblemError","ChallengeUpsolveQues","setupsolve","UpsolveQuestion","max","ChallengeContent","AuthGaurd","children","Challenge","BoxTitle","LoginPage","error","setError","isLoading","setisLoading","placeholder","previousSibling","childNodes","setTimeout","UpsolveText","mesh","useRef","useFrame","current","rotation","x","gltf","useLoader","GLTFLoader","ref","object","scene","scale","position","radius","MarsPlanet","Planet","HomePage","innerWidth","innerHeight","minWidth","minHeight","colorManagement","shadowMap","camera","fov","far","pixelRatio","min","intensity","fallback","cos","PI","sin","Stars","depth","OrbitControls","minPolarAngle","autoRotate","LogoutPage","ErrorPage","ProfilePage","isloading","setisloading","CountryRef","institutionRef","problems","series","maxUpsolved","UpsolveStreak","Object","keys","key","problemDescription","contestLink","problemLink","fontFamily","whiteSpace","overflowX","textOverflow","unshift","src","alt","data-toggle","aria-expanded","loggedinUser","options","grid","show","chart","stacked","animations","enabled","zoom","autoScaleYaxis","toolbar","autoSelected","dataLabels","markers","size","align","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","yaxis","xaxis","formate","tooltip","shared","curve","defaultValue","rows","preventDefault","reload","maxHeight","overflowY","backgroundColor","borderColor","ProfileRoute","setuser","paramUsername","match","params","setloggedinUser","User","loggedinUsername","RegisterPage","setusername","setpassword","confirmpassword","setconfirmpassword","setcountry","setinstitution","setbio","validatePassword","setvalidatePassword","optPgae","setoptPage","optCode","setoptCode","init","required","ct","display","psw","checkPassword","OTP","random","renderer","register","App","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.948a1010.chunk.js","sourcesContent":["import React from 'react';\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport {Link} from 'react-router-dom'\r\nexport default class Entry extends React.Component{\r\n\r\n    \r\n    render(){\r\n        let id = \"table\"+this.props.id;\r\n        let percentage = parseInt((this.props.streak/30)*100);\r\n        \r\n        return(\r\n            <Link to={\"/profile/\"+this.props.name} style={{textDecoration: \"none\"}}>\r\n            <div class=\"entry shadow\">\r\n                \r\n                <div class=\"rank\">{this.props.id + parseInt(this.props.offset) + 1} </div>\r\n                <div class=\"names\">{this.props.name}</div>\r\n                <CircularProgressbar className=\"PB\"\r\n                  value={percentage}\r\n                  text={this.props.streak}\r\n                  styles={{\r\n                    // Customize the root svg element\r\n                    root: {},\r\n                    // Customize the path, i.e. the \"completed progress\"\r\n                    path: {\r\n                      // Path color\r\n                      stroke: 'linear-gradient(#0052D4, #4364F7, #6FB1FC)',\r\n                      // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                      strokeLinecap: 'butt',\r\n                      // Customize transition animation\r\n                      transition: 'stroke-dashoffset 0.5s ease 0s',\r\n                      // Rotate the path\r\n                    //   transform: 'rotate(0.25turn)',\r\n                      transformOrigin: 'center center',\r\n                    },\r\n                    // Customize the circle behind the path, i.e. the \"total progress\"\r\n                    trail: {\r\n                      // Trail color\r\n                      stroke: '#d6d6d6',\r\n                      // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                      strokeLinecap: 'butt',\r\n                      // Rotate the trail\r\n                    //   transform: 'rotate(0.25turn)',\r\n                      transformOrigin: 'center center',\r\n                    },\r\n                    // Customize the text\r\n                    text: {\r\n                      // Text color\r\n                      fill: 'linear-gradient(#0052D4, #4364F7, #6FB1FC)',\r\n                      // Text size\r\n                      fontSize: '2rem',\r\n                      fontWeight: '800'\r\n                    },\r\n                    // Customize background - only used when the `background` prop is true\r\n                    background: {\r\n                      fill: 'transparent',\r\n                    },\r\n                  }}\r\n                />\r\n                    \r\n                \r\n            </div>\r\n            </Link>\r\n        )\r\n    }\r\n};","let dev = {\r\n    url: \"https://up-solve.herokuapp.com\",\r\n}\r\nlet prod = {\r\n    url: \"https://up-solve.herokuapp.com\",\r\n}\r\n\r\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;","import fetch from \"node-fetch\";\r\nimport {config as cf} from '../constants';\r\n\r\nlet config = cf.url.toString();\r\n\r\nlet getToken = () =>{\r\n    return window.localStorage.getItem(\"token\");\r\n}\r\n\r\nasync function  getUser(id) {\r\n    if(!id){\r\n        return false;\r\n    }\r\n    return fetch(config+'/api/users/getUser/'+id).then(res => res.json());\r\n}\r\nasync function  getUserByname(username) {\r\n    if(!username){\r\n        return false;\r\n    }\r\n    return fetch(config+'/api/users/getUserByname/'+username).then(res => res.json())\r\n}\r\nasync function Check(props,type) {\r\n    return fetch(config+'/api/problem/check/'+type+'?username='+props.payload.username+'&name='+props.problem.name+'&index='+props.problem.index+'&contestId='+props.problem.contestId).then(res => res.json())\r\n}\r\n\r\nasync function dailyQuestion(props) {\r\n    return fetch(config+'/api/problem/dailyques/'+props.payload.username).then(res => res.json())\r\n}\r\nasync function UpsolveQuestion(props) {\r\n    return fetch(config+'/api/problem/upsolve/'+props.payload.username).then(res => res.json())\r\n}\r\n\r\n\r\n\r\nasync function LeaderboardList(skip,limit,filter) {\r\n    return fetch(config+'/api/users/list?skip='+((skip-1)*limit)+'&limit='+limit+'&country='+filter.country+'&institution='+filter.institution+'&username='+filter.username).then(res => res.json());\r\n}\r\n\r\nasync function Profile() {\r\n    return fetch(config+'/api/users/profile',{\r\n        method:\"get\",\r\n        headers: {\r\n            \"Authorization\": getToken(),\r\n\r\n        }\r\n    }).then(res => res.json());\r\n}\r\n\r\n\r\nexport {Check,dailyQuestion,UpsolveQuestion,LeaderboardList,Profile,getUser,getUserByname};","import {useState,useEffect} from 'react'; \r\nimport Entry from './entry';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Paginate from 'react-paginate';\r\nimport {LeaderboardList} from '../Api/problem.api';\r\n\r\nfunction Leaderboard(props) {\r\n\r\n    \r\n\r\n    \r\n    const [items,setItems] = useState([]);\r\n    const [skip,setskip] = useState(1);\r\n    const [limit,setlimit] = useState(5);\r\n    const [count,setcount] = useState(0);\r\n    const [loading,setloading] = useState(true);\r\n    const filter = props.filter;\r\n    useEffect(()=>{\r\n        setskip(1);\r\n    },[filter])\r\n    useEffect(()=>{\r\n        setloading(true);\r\n        LeaderboardList(skip,limit,filter).then((result)=>{\r\n            setloading(false);\r\n            setItems(result.data);\r\n            setcount(result.count);\r\n        })  \r\n    },[skip,limit,filter]);\r\n\r\n\r\n    \r\n    var board = [];\r\n    \r\n    if(loading){\r\n        board.push(<Skeleton variant=\"rect\" width=\"100%\" height={40}></Skeleton>);\r\n        board.push(<Skeleton variant=\"rect\" width=\"100%\" height={40}></Skeleton>);\r\n        board.push(<Skeleton variant=\"rect\" width=\"100%\" height={40}></Skeleton>);\r\n        board.push(<Skeleton variant=\"rect\" width=\"100%\" height={40}></Skeleton>);\r\n        board.push(<Skeleton variant=\"rect\" width=\"100%\" height={40}></Skeleton>);\r\n        return board;\r\n    }\r\n\r\n    if(!items || items.length == 0){\r\n        board.push(<h1 style={{color: \"Orange\"}}>!! No User found !!</h1>);\r\n        return board;\r\n    }\r\n    // console.log(items);\r\n    items.forEach((el,i) => {\r\n        board.push(<Entry offset={(skip-1)*limit} id={i} name={el.username} streak={el.streak} />);\r\n    })\r\n    board.push(\r\n            \r\n            <Paginate containerClassName=\"paginate\" pageCount={Math.ceil(count/limit)} pageRangeDisplayed={5} marginPagesDisplayed={3} initialPage={skip - 1} previousLabel=\"<<\" nextLabel=\">>\" activeClassName=\"active-page\" onPageChange={(e)=>{setskip((e.selected) + 1)}}></Paginate>\r\n\r\n            \r\n        )\r\n    return board;\r\n}\r\n\r\nexport default Leaderboard;","// import { post } from \"../../../api/users.api\";\r\nimport {config as cf} from '../constants';\r\n\r\nlet config = cf.url;\r\n\r\nfunction getToken() {\r\n    return window.localStorage.getItem(\"token\");\r\n}\r\n\r\nfunction TokenAuthentication() {\r\n    let token = getToken();\r\n    if(!token){\r\n        return false;\r\n    }\r\n    let payload =JSON.parse(atob(token.split('.')[1]));\r\n    return payload;\r\n}\r\n\r\nasync function loginProcess(username,password) {\r\n    \r\n    \r\n    return fetch(config+'/api/users/login',{\r\n        method: \"post\",\r\n        headers:{\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            username,password\r\n        })\r\n    }).then(res => res.json()).then((data) => {\r\n        if(data.status){\r\n            window.localStorage.setItem(\"token\",data.token);\r\n            window.location = \"/challenge\";\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n            \r\n        }\r\n    });\r\n}  \r\n\r\nasync function updateUser(username,firstName,lastName,country,institution,bio) {\r\n    return fetch(config+'/api/users/updateuser',{\r\n        method: \"post\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            username: username,\r\n            name: firstName+\" \"+lastName,\r\n            country: country,\r\n            institution: institution,\r\n            bio: bio\r\n        })\r\n    }).then(res => res.json()).then((result) => {return true}).catch(err => {return false});\r\n}\r\n\r\nasync function registrationProcess(username,password,country,institution,bio) {\r\n    return fetch(config+'/api/users/register',{\r\n        method: \"post\",\r\n        headers:{\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            username,\r\n            password,\r\n            country,\r\n            institution,\r\n            bio\r\n        })\r\n    }).then(res => res.json()).then((result) => {return result.status}).catch((err) => {return false});\r\n}\r\n\r\nfunction getFirstName(username) {\r\n    return fetch('https://codeforces.com/api/user.info?handles='+username).then(res => res.json()).then(users=> {\r\n        if(users.status===\"OK\"){\r\n            return users.result[0].firstName;\r\n        }else{\r\n            return false;\r\n        }\r\n    }).catch(err => {\r\n        console.log(err);\r\n        return false;\r\n    })\r\n}\r\n\r\nfunction logout() {\r\n    window.localStorage.removeItem(\"token\");\r\n    window.location = '/'\r\n}\r\n\r\nexport {getToken,TokenAuthentication,loginProcess,logout,getFirstName,registrationProcess,updateUser};","import React,{useState,useEffect} from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport {logout,TokenAuthentication} from './Api/auth.api';\r\nimport {Link} from 'react-router-dom'\r\nfunction NavigationMenu() {\r\n\r\n    const [status,setstatus] = useState(false);\r\n    const [payload,setpayload] =useState({});\r\n    const [open,setOpen] = useState(false);\r\n\r\n\r\n    useEffect(()=>{\r\n        let payload = TokenAuthentication();\r\n        if(payload){\r\n            setstatus(true);\r\n            setpayload(payload)\r\n        }\r\n    },[])\r\n\r\n    let Toggler = ()=>{\r\n        setOpen(!open);\r\n    }\r\n\r\n    return (\r\n        <section class=\"navigation-menu\">\r\n            <div class=\"nav-bar col-12\">\r\n                <p class=\"text-center\">Upsolve</p>\r\n                <div class=\"nav-items col-lg-3 col-6 text-center\">\r\n                    <a onClick={(e) => {Toggler()}} className=\"position-relative back-btn\" >\r\n                        <Tooltip title=\"Navigate\" arrow>\r\n                            <div>\r\n                                <i class=\"fa fa-rocket\"></i>\r\n                            </div>\r\n                        </Tooltip>\r\n                        {open ? \r\n                        <>\r\n                        <a href=\"/\" className=\"position-absolute back-btn\" style={{top: \"120%\", left: \"-120%\"}}>\r\n                            <Tooltip title=\"Home\" arrow>\r\n                                <div>\r\n                                    <i class=\"fa fa-home\"></i>\r\n                                </div>\r\n                            </Tooltip>\r\n                            \r\n                        </a>\r\n                        <a href=\"/leaderboard\" className=\"position-absolute back-btn\" style={{top: \"170%\", left: \"0%\"}}>\r\n                            <Tooltip title=\"Leaderboard\" arrow>\r\n                                <div>\r\n                                    <i class=\"fa fa-trophy\"></i>\r\n                                </div>\r\n                            </Tooltip>\r\n                            \r\n                        </a>\r\n                        <a href=\"/challenge\" className=\"position-absolute back-btn\" style={{top: \"120%\", left: \"120%\"}}>\r\n                            <Tooltip title=\"Challenge\" arrow>\r\n                                <div>\r\n                                    <i class=\"fa fa-calendar-check-o\"></i>\r\n                                </div>\r\n                            </Tooltip>\r\n                            \r\n                        </a>\r\n                        </>\r\n                        : \r\n                         <></>       \r\n                        }                       \r\n                    </a>\r\n                    <Link to={status ? \"/profile/\"+payload?.username : \"/login\"}><a href=\"#\" data-toogle=\"tooltip\" data-palcement=\"bottom\" title={status ? payload?.username : \"Login/Register\"}>\r\n                        <Tooltip title={status ? payload?.username : \"Login/Register\"} arrow>\r\n                            <div>\r\n                                <i class=\"fa fa-user\"></i>\r\n                            </div>\r\n                        </Tooltip>\r\n                    </a></Link>\r\n                    <a href=\"#\" data-toogle=\"tooltip\" data-palcement=\"bottom\" title=\"Logout\">\r\n                        <Tooltip title=\"Logout\" arrow>\r\n                            <div onClick={() => {logout()}}>\r\n                                <i class=\"fa fa-sign-out\"></i>\r\n                            </div>\r\n                        </Tooltip>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default NavigationMenu;\r\n","\r\nimport { useEffect, useState } from 'react';\r\nimport '../App.css';\r\nimport Leaderboard from './leaderboard';\r\n\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport NavigationMenu from '../NavigationMenu';\r\n\r\nfunction LeaderboardPage() {\r\n    const country_list = require('country-list');\r\n    let countries = [];\r\n    country_list.getNames().map((country) => {\r\n        countries.push(<option value={country}>{country}</option>)\r\n    })\r\n    const [filter,setfilter] = useState({country:'',institution: '',username:''});\r\n    \r\n    \r\n    \r\n  return (\r\n    <div className=\"App\">\r\n        \r\n        {<NavigationMenu></NavigationMenu> || <Skeleton width=\"100%\" height=\"2rem\"></Skeleton>}\r\n        <section class=\"Leaderboard\">\r\n\r\n                <div class=\"container-fluid leaderboard-container col-lg-8 col-md-6 col-11\">\r\n                    <div class=\"leaderboard-title\">\r\n                        <p>Leaderboard</p>\r\n                    </div>\r\n                    <div class=\"leaderboard-table\">\r\n                        \r\n                    <Leaderboard filter={filter} /> \r\n                        \r\n                        \r\n\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div class=\"container-fluid col-lg-3 col-md-4 col-11 filters\">\r\n                    <div class=\"filter-title\">\r\n                        <p>Filter</p>\r\n                    </div>\r\n                    <div class=\"filter-form row\">\r\n                        <form action=\"#\">\r\n                            <label for=\"country\">Country: </label>\r\n                            <select name=\"country\" onChange={(e)=> {setfilter({...filter,country:e.target.value})}} class=\"col-7\" id=\"country\">\r\n                                <option value=\"\">Any</option>\r\n                                {countries}\r\n                            </select>\r\n                            <label for=\"institution\">Institution: </label>\r\n                            <select name=\"institution\" disabled onChange={(e)=> {setfilter({...filter,institution:e.target.value})}} class=\"col-7\" id=\"institution\">\r\n                                <option value=\"\"></option>\r\n                            </select>\r\n                            <label for=\"username\">Username: </label>\r\n                            <input type=\"text\" name=\"username\" onChange={(e)=> {setfilter({...filter,username:e.target.value})}} class=\"col-7\" id=\"username\"/>\r\n                            {/* <input type=\"submit\" class=\"btn-primary\" value=\"Submit\"/> */}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n        \r\n        </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeaderboardPage;\r\n","import {useState,useEffect} from 'react';\r\nfunction ChallengeTimer() {\r\n    \r\n    const [timer,settimer] = useState(new Date());\r\n\r\n    useEffect(()=>{\r\n        setInterval(()=>{settimer(new Date())},1000);\r\n        \r\n    },[]);\r\n\r\n    let getHours = () =>{\r\n        \r\n        let hours = parseInt(23 - timer.getHours());\r\n        if(hours < 10){\r\n            hours = \"0\"+hours;\r\n        }\r\n        return hours;\r\n    }\r\n    let getMinutes = () =>{\r\n        \r\n        let minutes = parseInt(59 - timer.getMinutes());\r\n        if(minutes < 10){\r\n            minutes = \"0\"+minutes;\r\n        }\r\n        return minutes;\r\n    }\r\n    let getSeconds = () =>{\r\n        \r\n        let seconds = parseInt(59 - timer.getSeconds());\r\n        if(seconds < 10){\r\n            seconds = \"0\"+seconds;\r\n        }\r\n        return seconds;\r\n    }\r\n\r\n    return(\r\n        <h1 style={{color:\"white\",textShadow:\"0px 0px 15px red\"}}>{getHours()} : {getMinutes()} : {getSeconds()}</h1>\r\n    )\r\n    \r\n}\r\n\r\nexport default ChallengeTimer;","import { PromiseProvider } from 'mongoose';\r\nimport React from 'react';\r\n\r\nfunction ProblemCardTitle(props) {\r\n    \r\n    return(\r\n        \r\n        <div className=\"problem-card-title\">\r\n            <div className=\"checkmark-circle\">\r\n                {props.upsolve===undefined ? <div className={props.solved ?\"checkmark draw\":\"\"}></div> : <p>{props.upsolve}</p>}\r\n            </div>\r\n            <h1>{props.title}</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProblemCardTitle;","import Skeleton from '@material-ui/lab/Skeleton';\r\nimport fetch from 'node-fetch';\r\nimport React, { useEffect,useState } from 'react';\r\nimport {Check} from '../Api/problem.api';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nfunction ProblemDescription(props) {\r\n\r\n    const [checking,setchecking] = useState(false);\r\n\r\n    let CheckProblem = () =>{\r\n        setchecking(true);\r\n        \r\n        Check(props,props.upsolve!==undefined ? \"upsolve\" : \"daily\").then((result) => {\r\n            setchecking(false);\r\n            \r\n            if(result === true){\r\n                props.upsolve===undefined ? props.updatesolved(true) : props.updateupsolve(true);\r\n            }\r\n        })\r\n    }\r\n    \r\n    return(\r\n        props.Error===null ?\r\n            !props.solved ?\r\n            (props.problem?.name ? \r\n            <div className=\"problem-description\">\r\n                <div className=\"description\">\r\n                    <label>Problem: </label>\r\n                    <a href={props.problem?.link} target=\"_blank\">{props.problem?.name}</a>\r\n                    <label>ContestID: </label>\r\n                    <a href={\"https://codeforces.com/contest/\"+props.problem?.contestId} target=\"_blank\">{props.problem?.contestId}</a>\r\n                    <label>Rating: </label>\r\n                    <p>{props.problem?.rating}</p>\r\n                </div>\r\n                <button className=\"shadow\" onClick={CheckProblem} disabled={checking}>{checking?\"Checking...\":\"Check\"}</button>\r\n  \r\n            </div>\r\n            :\r\n            <div style={{width:\"100%\"}}>\r\n                <Skeleton width=\"78%\" height=\"3rem\" style={{margin:\"0.7rem auto\",color:\"grey\",borderRadius:\"999px\"}}></Skeleton>\r\n                <Skeleton width=\"78%\" height=\"3rem\" style={{margin:\"0 auto 0.7rem auto\",color:\"grey\",borderRadius:\"999px\"}}></Skeleton>\r\n                <Skeleton width=\"78%\" height=\"3rem\" style={{margin:\"0 auto 0.7rem auto\",color:\"grey\",borderRadius:\"999px\"}}></Skeleton>\r\n                <Skeleton width=\"78%\" height=\"3rem\" style={{margin:\"0 auto 0.7rem auto\",color:\"grey\",borderRadius:\"999px\"}}></Skeleton>\r\n            </div>)\r\n            :\r\n            (\r\n                <div className=\"problem-description\">\r\n                    <h1>Solve More upsolve questions</h1>\r\n                </div>\r\n            ) \r\n        :\r\n        (\r\n            <div className=\"problem-description\">\r\n                <h1>{props.Error} <Tooltip title=\"Refresh\" arrow><i className=\"fa fa-refresh\" role=\"button\" onClick={() => {props.refresh()}}></i></Tooltip></h1>\r\n            </div>\r\n        )   \r\n    )\r\n}\r\n\r\nexport default ProblemDescription;","import React from 'react';\r\nimport ProblemCardTitle from './ProblemCardTitle'\r\nimport ProblemDescription from './ProblemDescription'\r\nimport  { useEffect, useState } from 'react';\r\nimport {dailyQuestion,getUser} from '../Api/problem.api';\r\nfunction ChallengeDailyQues(props) {\r\n\r\n    const [problem,setproblem] = useState({\r\n        name: \"\",\r\n        contestId: \"\",\r\n        index: \"\",\r\n        link: \"\",\r\n        rating: \"\",\r\n    });\r\n    const [solved,setsolved] = useState(\"\");\r\n    getUser(props.payload._id).then((user) => {setsolved(user.dailyQuestion)})\r\n    const [problemError,setproblemError] = useState(null);\r\n    useEffect(()=>{\r\n        if(!solved && solved !== \"\"){\r\n            dailyQuestion(props).then((problem)=>{\r\n                if(problem === false){\r\n                    setproblemError(\"Unable to fetch the Problem\")\r\n                    \r\n                }\r\n                else{\r\n                    setproblem(problem);\r\n                    setproblemError(null);\r\n                }\r\n            })\r\n        }\r\n    },[problemError,solved])\r\n    return(\r\n\r\n        <div className=\"dailyques-section\">\r\n            \r\n            <ProblemCardTitle solved={solved} title=\"Daily Question\"></ProblemCardTitle>\r\n            <ProblemDescription payload={props.payload} problem={problem} Error={problemError} refresh={() => {setproblemError(null)}} solved={solved} updatesolved={(result)=> {setsolved(result)}}></ProblemDescription>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChallengeDailyQues;","import Skeleton from '@material-ui/lab/Skeleton';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ProblemCardTitle from './ProblemCardTitle'\r\nimport ProblemDescription from './ProblemDescription'\r\nimport {UpsolveQuestion,getUser} from '../Api/problem.api'\r\n\r\nfunction ChallengeUpsolveQues(props) {\r\n\r\n    const [problem,setproblem] = useState({\r\n        name: \"\",\r\n        contestId: \"\",\r\n        index: \"\",\r\n        link: \"\",\r\n        rating: \"\",\r\n    });\r\n    \r\n    const [upsolve,setupsolve] = useState(-1);\r\n    getUser(props.payload._id).then((user) => {setupsolve(user.UpsolveQuestion)})\r\n    const [problemError,setproblemError] = useState(null);\r\n    useEffect(()=>{\r\n        if(upsolve >= 0){\r\n            UpsolveQuestion(props).then((problem)=>{\r\n                \r\n                if(problem === false){\r\n                    setproblemError(\"Unable to fetch the Problem\")\r\n                    \r\n                }\r\n                else{\r\n                    setproblem(problem);\r\n                    setproblemError(null);\r\n                }\r\n            });\r\n        }\r\n    },[problemError,upsolve])\r\n    return(\r\n        \r\n           <div className=\"Upsolveques-section\">\r\n                \r\n                <ProblemCardTitle upsolve={Math.max(0,upsolve)} title=\"Upsolve Question\"></ProblemCardTitle>\r\n                <ProblemDescription payload={props.payload} problem={problem} Error={problemError} refresh={() => {setproblemError(null)}} solved={false} upsolve={upsolve} updateupsolve={(result)=> {setupsolve(upsolve + 1);setproblemError(null)}}></ProblemDescription>\r\n            </div>\r\n            \r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default ChallengeUpsolveQues;","import React,{useEffect,useState} from 'react';\r\nimport ChallengeTimer from './ChallengeTimer'\r\nimport ChallengeDailyQues from './ChallengeDailyQues'\r\nimport ChallengeUpsolveQues from './ChallengeUpsolveQues'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport {TokenAuthentication} from '../Api/auth.api';\r\n\r\nfunction ChallengeContent() {\r\n\r\n    const [payload,setpayload] = useState({});\r\n\r\n    useEffect(()=> {\r\n        let user = TokenAuthentication();\r\n        if(user){\r\n            setpayload(user);\r\n        }\r\n    },[])\r\n    return(\r\n\r\n        \r\n        \r\n        <div className=\"challenge text-center\">\r\n            <ChallengeTimer></ChallengeTimer>\r\n            {\r\n                <div className=\"problem-container\">\r\n                    <ChallengeDailyQues payload={payload}></ChallengeDailyQues>\r\n                    <ChallengeUpsolveQues payload={payload}></ChallengeUpsolveQues>\r\n                </div>\r\n            ||\r\n                <div className=\"text-center\" style={{width:\"100%\",margin:\"auto\"}}> \r\n                    <Skeleton width=\"80%\" height=\"4rem\" style={{color:\"grey\",margin:\"auto\",borderRadius: \"999px\"}}></Skeleton>\r\n                    <Skeleton width=\"80%\" height=\"4rem\" style={{color:\"grey\",margin:\"auto\",borderRadius: \"999px\"}}></Skeleton>\r\n                    <Skeleton width=\"80%\" height=\"4rem\" style={{color:\"grey\",margin:\"auto\",borderRadius: \"999px\"}}></Skeleton>\r\n                    <Skeleton width=\"80%\" height=\"4rem\" style={{color:\"grey\",margin:\"auto\",borderRadius: \"999px\"}}></Skeleton>\r\n                    <Skeleton width=\"80%\" height=\"4rem\" style={{color:\"grey\",margin:\"auto\",borderRadius: \"999px\"}}></Skeleton>\r\n                </div>\r\n            }\r\n        </div>    \r\n    );\r\n}\r\n\r\nexport default ChallengeContent;","import React,{useEffect, useState} from 'react';\r\nimport {TokenAuthentication} from './Api/auth.api'\r\n\r\n\r\n\r\nfunction AuthGaurd({children}) {\r\n\r\n    const [status,setstatus] = useState(false);\r\n    useEffect(()=>{\r\n        let payload = TokenAuthentication();\r\n        if(payload === false){\r\n            window.location = '/login'\r\n            \r\n        }\r\n        else{\r\n            setstatus(true);\r\n        }\r\n    },[])\r\n    return (<div>\r\n        {status ? children : \"\"}\r\n    </div>);\r\n}\r\n\r\nexport default AuthGaurd;\r\n","import React from 'react';\r\nimport NavigationMenu from '../NavigationMenu';\r\nimport ChallengeContent from './ChallengeContent';\r\nimport AuthGaurd from '../authGaurd';\r\n\r\nfunction Challenge() {\r\n    return(\r\n        <div>\r\n            <AuthGaurd>\r\n                <NavigationMenu></NavigationMenu>\r\n\r\n                <ChallengeContent></ChallengeContent>\r\n            </AuthGaurd>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Challenge;","import React from 'react'\r\n\r\nfunction BoxTitle(props) {\r\n    return(\r\n        <div className=\"box-title\">\r\n            <p>{props.title}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default BoxTitle;","\r\nimport fetch from 'node-fetch';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport NavigationMenu from './NavigationMenu';\r\nimport BoxTitle from './BoxTitile';\r\nimport {Link} from 'react-router-dom'\r\nimport {loginProcess,getToken,TokenAuthentication} from './Api/auth.api';\r\n\r\n\r\n    \r\n\r\n\r\n\r\nfunction LoginPage() {\r\n    \r\n    // const [username,setusername] = useState(\"\");\r\n    const [error,setError] = useState(false);\r\n    const [isLoading,setisLoading] = useState(false)\r\n    let username=\"\",password=\"\";\r\n\r\n    useEffect(() => {\r\n        if(getToken()){\r\n            let payload = TokenAuthentication();\r\n            window.location = '/profile/'+payload.username;\r\n        }\r\n        console.log(username,password)\r\n    },[])\r\n    \r\n    return(\r\n\r\n        \r\n        <div>\r\n\r\n            <NavigationMenu></NavigationMenu>\r\n            {error === true ? \r\n            <div className=\"alert-heading text-center p-1 m-auto bg-danger text-light alert-animation\" style={{width: \"30%\",borderRadius: \"5px\",\"fontSize\": \"1.2rem\"}}>\r\n                Incorrect Credentials\r\n            </div> \r\n            \r\n            : ''}\r\n\r\n            <div className=\"box\">\r\n                <BoxTitle title=\"Login\"></BoxTitle>\r\n                <div className={isLoading ? \"box-content-dimension loading\" : \"box-content-dimension\"}>\r\n                    <div className=\"box-form\">\r\n                        <label for=\"username\">Username:</label>\r\n                        <input type=\"text\" placeholder=\"Enter Username\" onChange={(e)=>{username = e.target.value}}></input>\r\n                        <label for=\"password\">Password:</label>\r\n                        <input type=\"password\" placeholder=\"Enter Password\" onChange={(e)=>{password = e.target.value}}></input>\r\n                    </div>\r\n                    <button className=\"shadow\" onClick={async (e) => {\r\n                        \r\n                        setisLoading(true);\r\n                        let result = await loginProcess(username,password)\r\n                        e.target.previousSibling.childNodes[1].value = \"\";\r\n                        e.target.previousSibling.childNodes[3].value = \"\";\r\n                        setisLoading(false);\r\n                        if(!result || result === false){\r\n                            console.log(\"Error\", result)\r\n                            setError(true);\r\n                            setTimeout(() => {\r\n                                setError(false);\r\n                            },5000)\r\n                        }\r\n                        \r\n                        }}>{isLoading ? \"Logging...\" : \"Login\"}</button>\r\n                    <Link to=\"/register\">Create an Account</Link>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","import React, { useRef, } from 'react';\r\nimport {useFrame,useLoader} from 'react-three-fiber';\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\n\r\n\r\nfunction UpsolveText(){\r\n    const mesh = useRef();  \r\n    useFrame(()=>{ mesh.current.rotation.x=-300})\r\n    const gltf = useLoader(GLTFLoader, \"UpsolveText.glb\");\r\n    return <primitive ref={mesh} object={gltf.scene} scale={[3,3,3]} position={[0,10,0]} />\r\n}\r\n\r\nexport default UpsolveText;","import React, { useEffect,useState, useRef, Suspense, useMemo } from 'react';\r\nimport {Canvas,useFrame,useLoader,useUpdate} from 'react-three-fiber';\r\nimport {softShadows,MeshWobbleMaterial,OrbitControls,Stars, Circle,Sphere,Text} from '@react-three/drei';\r\nimport {useSpring,a} from 'react-spring/three'\r\nimport ReactGlobe from 'react-globe';\r\nimport { BoxBufferGeometry } from 'three';\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport UpsolveText from './models/UpsolveText';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport BoxTitle from './BoxTitile';\r\n\r\n\r\nlet radius = 300;\r\nconst MarsPlanet = ({position}) => {\r\n    const mesh = useRef();\r\n    let i = {\r\n        current: 1000\r\n    }\r\n    // useFrame(() => {\r\n    //     mesh.current.rotation.x = mesh.current.rotation.y += 0.001;\r\n    //     mesh.current.position.x = (radius * Math.cos(2 * Math.PI * (i.current) / 1000)) ;\r\n    //     mesh.current.position.z = (radius * Math.sin(2 * Math.PI * (i.current) / 1000)) - 100 ;\r\n    //     i.current--;\r\n    //     if(i.current<1){\r\n    //         i.current=1000\r\n    //     }\r\n    // })\r\n    // useFrame(() => {mesh.current})\r\n    const gltf = useLoader(GLTFLoader, \"Mars_1_6792.glb\");\r\n    return <mesh onClick={() => {window.location=\"/leaderboard\"}}><primitive ref={mesh} object={gltf.scene} scale={[0.1,0.1,0.1]} position={position} /></mesh>\r\n  };\r\n  const Planet = ({position}) => {\r\n    const mesh = useRef();\r\n    let i = {\r\n        current: 700\r\n    }\r\n    // useFrame(() => {\r\n    //     mesh.current.rotation.x = mesh.current.rotation.y += 0.001;\r\n    //     mesh.current.position.x = (radius * Math.cos(2 * Math.PI * (i.current) / 1000)) ;\r\n    //     mesh.current.position.z = (radius * Math.sin(2 * Math.PI * (i.current) / 1000)) - 100 ;\r\n    //     i.current--;\r\n    //     if(i.current<1){\r\n    //         i.current=1000\r\n    //     }\r\n    // })\r\n    // useFrame(() => {mesh.current})\r\n    const gltf = useLoader(GLTFLoader, \"Jupiter_1_142984.glb\");\r\n    return <primitive ref={mesh} object={gltf.scene} scale={[0.1,0.1,0.1]} position={position} />\r\n  };\r\n  \r\n\r\n\r\n\r\nfunction HomePage() {\r\n    \r\n    return(\r\n        <>\r\n        <Canvas \r\n            style={{width: window.innerWidth,height: window.innerHeight,minWidth: \"100vw\",minHeight: \"100vh\"}}\r\n            colorManagement\r\n            shadowMap\r\n            camera = {{position: [0,20,400], fov: 100,far:5000}}\r\n            pixelRatio={Math.min(2,  1)}\r\n\r\n        >\r\n            <ambientLight intensity={0.3}></ambientLight>\r\n            <directionalLight\r\n                position={[0,0,10]}\r\n                intensity={1.5}\r\n            ></directionalLight>\r\n            <pointLight position={[-10,0,-20]} intensity={0.5}></pointLight>\r\n            <pointLight position={[0,-10,0]} intensity={1.5}></pointLight>\r\n            <group>\r\n                <Suspense fallback={null}>\r\n                    <UpsolveText></UpsolveText>\r\n                    <MarsPlanet position={[radius * Math.cos(2 * Math.PI * (1000) / 1000),0,radius * Math.sin(2 * Math.PI * (1000) / 1000) - 100]} />\r\n                    \r\n                    <Planet position={[radius * Math.cos(2 * Math.PI * (700) / 1000),0,radius * Math.sin(2 * Math.PI * (700) / 1000) - 100]} />\r\n                    \r\n                </Suspense>\r\n                \r\n                <Stars radius={1000} count={5000} depth={100}></Stars>\r\n                <OrbitControls minPolarAngle={Math.PI / 3} autoRotate></OrbitControls>\r\n            </group>\r\n        </Canvas>\r\n        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default HomePage;","import React, { useEffect,useState } from 'react';\r\n\r\n\r\nfunction LogoutPage() {\r\n    \r\n    useEffect(()=>{\r\n        window.localStorage.setItem(\"token\",null);\r\n        window.location = \"/login\"\r\n    },[])\r\n    return(\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default LogoutPage;","import NavigationMenu from './NavigationMenu'\r\n\r\nfunction ErrorPage() {\r\n    return(\r\n        <div>\r\n            <NavigationMenu></NavigationMenu>\r\n            \r\n                <p className=\"text-danger font-weight-bolder min-vw-100 display-4 d-flex justify-content-center align-items-center\" style={{height: \"80vh\"}}>Error 404: Page not Found</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;","import React,{useRef,useState} from 'react';\r\n// let LineChart = require('react-chartjs').Line\r\nimport Chart from 'react-apexcharts';\r\nimport {updateUser} from '../Api/auth.api';\r\nimport {Link} from 'react-router-dom';\r\nfunction  ProfilePage(props) {\r\n\r\n    const country_list = require('country-list');\r\n    let countries = [];\r\n    country_list.getNames().map((country) => {\r\n        countries.push(<option value={country}>{country}</option>)\r\n    })\r\n    const [isloading,setisloading] = useState(false);\r\n    const firstName = useRef(null);\r\n    const lastName = useRef(null);\r\n    const bio = useRef(null);\r\n    const CountryRef = useRef(null);\r\n    const institutionRef = useRef(null);\r\n    let problems = [];\r\n    let series= [{\r\n        name: 'Upsolved',\r\n        data: []\r\n      }];\r\n     let options= {\r\n        grid:{\r\n            show: false,\r\n        },\r\n        \r\n        chart: {\r\n            \r\n          type: 'area',\r\n          stacked: false,\r\n          height: 350,\r\n          animations:{\r\n              enabled:true,\r\n          },\r\n          \r\n          zoom: {\r\n            type: 'x',\r\n            enabled: true,\r\n            autoScaleYaxis: true\r\n          },\r\n          toolbar: {\r\n            autoSelected: 'zoom'\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        markers: {\r\n          size: 5,\r\n        },\r\n        title: {\r\n          text: 'Upsolved Questions',\r\n          align: 'left'\r\n        },\r\n        fill: {\r\n          type: 'gradient',\r\n          gradient: {\r\n            shadeIntensity: 1,\r\n            inverseColors: false,\r\n            opacityFrom: 0.5,\r\n            opacityTo: 0,\r\n            stops: [0, 90, 100]\r\n          },\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: 'Number of Questions'\r\n          },\r\n          min:0\r\n        },\r\n        xaxis: {\r\n         \r\n          formate: \"D-MM-YYYY\"\r\n        },\r\n        tooltip: {\r\n          shared: false,\r\n        },\r\n        stroke:{\r\n            curve: 'straight'\r\n        }\r\n      };   \r\n    \r\n     \r\n    let maxUpsolved = parseInt(0);\r\n    let UpsolveQuestion = props.user.UpsolveStreak;\r\n    \r\n    if(UpsolveQuestion && UpsolveQuestion !== null && UpsolveQuestion !== undefined){\r\n        Object.keys(UpsolveQuestion).map((key,i) => {\r\n            let problemDescription = [];\r\n            series[0].data.push({'x': key,'y': UpsolveQuestion[key].length});\r\n            maxUpsolved = Math.max(maxUpsolved,UpsolveQuestion[key].length);\r\n            UpsolveQuestion[key].forEach((value) => {\r\n                if(value.contestId){\r\n                    value.contestLink = \"https://codeforces.com/contest/\"+value.contestId;\r\n                    value.problemLink = \"https://codeforces.com/contest/\"+value.contestId+\"/problem/\"+value.index;\r\n                }\r\n                \r\n                problemDescription.push(\r\n                    <div className=\"row offset-0 p-lg-1 p-md-1 offset-md-1 offset-lg-1 ml-0\" style={{fontSize: \"1rem\",fontFamily: \"open-sans\",fontWeight: \"600\",width: \"100%\"}}>\r\n                                \r\n                        <p className=\"text-center col-4 col-md-5 col-lg-6 m-auto\" style={{whiteSpace:\"nowrap\",overflowX: \"hidden\",textOverflow: \"ellipsis\"}}>{value.name ? <a href={value.problemLink} target=\"_blank\">{value.name}</a> : \"-\"}</p>\r\n                        <p className=\"text-center col-4 col-md-3 col-lg-3 m-auto\">{value.contestId ? <a href={value.contestLink} target=\"_blank\">{value.contestId}</a> : \"-\"}</p>\r\n                        <p className=\"text-center col-4 col-md-3 col-lg-3 m-auto\">{value.rating ? value.rating : \"-\"}</p>\r\n                    </div>\r\n                )\r\n            })\r\n            problems.unshift(\r\n                <li id={\"#\"+key} class=\"timeline-sm-item pl-1\">\r\n                \r\n                    <span class=\"timeline-sm-date\">{key}</span>\r\n                    <div className=\"row p-0 pt-3 pl-0 d-flex justify-content-between align-items-center flex-column\">\r\n                        {problemDescription}\r\n                    </div>\r\n                </li>\r\n            )\r\n            \r\n        })\r\n    }\r\n    return(\r\n        \r\n        <div class=\"container mt-4\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-4 col-xl-4\">\r\n                <div class=\"card-box text-center\">\r\n                    <img src=\"https://bootdey.com/img/Content/avatar/avatar7.png\" class=\"rounded-circle avatar-xl img-thumbnail\" alt=\"profile-image\" />\r\n        \r\n                    <h4 class=\"mb-0\">{props.user.username}</h4>\r\n                    \r\n        \r\n                    <div class=\"text-left mt-3\">\r\n                        <h4 class=\"font-13 text-uppercase\">About Me :</h4>\r\n                        <p class=\"text-muted font-13 mb-3\">\r\n                            {props.user.bio ? props.user.bio : \"A passionate programmer\"}\r\n                        </p>\r\n                        <p class=\"text-muted mb-2 font-13\"><strong>Full Name :</strong> <span class=\"ml-2\">{props.user.name ? props.user.name : \"-\"}</span></p>\r\n        \r\n                        \r\n        \r\n                        <p class=\"text-muted mb-2 font-13\"><strong>Institution :</strong> <span class=\"ml-2 \">{props.user.institution ? props.user.institution : \"-\"}</span></p>\r\n        \r\n                        <p class=\"text-muted mb-1 font-13\"><strong>Location :</strong> <span class=\"ml-2\">{props.user.country ? props.user.country : \"-\"}</span></p>\r\n                        <p class=\"text-muted mb-1 font-13\"><strong>Max-Upsolved :</strong> <span class=\"ml-2 text-success\">{parseInt(maxUpsolved)}</span></p>\r\n                        <p class=\"text-muted mb-1 font-13\"><strong>Streak :</strong> <span class=\"ml-2 text-success\">{parseInt(props.user.streak ? props.user.streak : \"0\")}</span></p>\r\n                    </div>\r\n        \r\n                \r\n                </div> \r\n        \r\n\r\n        \r\n            </div> \r\n            <div class=\"col-lg-8 col-xl-8\">\r\n                <div class=\"card-box\">\r\n                \r\n                    <ul class=\"nav nav-pills navtab-bg\">\r\n                        <li class=\"nav-item\">\r\n                            <a href=\"#about-me\" data-toggle=\"tab\" aria-expanded=\"true\" class=\"nav-link ml-0 active\">\r\n                                Graph\r\n                            </a>\r\n                        </li>\r\n                        {props.loggedinUser === true ?\r\n                        <li class=\"nav-item\">\r\n                            <a href=\"#settings\" data-toggle=\"tab\" aria-expanded=\"false\" class=\"nav-link\">\r\n                                <i class=\"mdi mdi-settings-outline mr-1\"></i>Settings\r\n                            </a>\r\n                        </li>\r\n                        :\r\n                        ''\r\n                        } \r\n                    </ul>\r\n                          \r\n                    <div class=\"tab-content\">\r\n                        \r\n                        <div class=\"tab-pane show active pt-5\" id=\"about-me\">\r\n\r\n                        \r\n                       \r\n                        <Chart options={options} series={series} type=\"area\" height={350} />\r\n\r\n    \r\n                        </div>\r\n                        \r\n                        {/* <div class=\"tab-pane\" id=\"settings\"><h1>Hello</h1></div> */}\r\n                         {props.loggedinUser === true ?\r\n                         <div class=\"tab-pane\" id=\"settings\">\r\n                            <form>\r\n                                <h5 class=\"mb-3 text-uppercase bg-light p-2\"><i class=\"mdi mdi-account-circle mr-1\"></i> Personal Info</h5>\r\n                                \r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"firstname\">First Name</label>\r\n                                            <input type=\"text\" ref={firstName} class=\"form-control\" id=\"firstname\" defaultValue={props.user.name ? props.user.name.split(' ')[0] : ''} />\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div class=\"col-md-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"lastname\">Last Name</label>\r\n                                            <input type=\"text\" ref={lastName} class=\"form-control\" id=\"lastname\" defaultValue={props.user.name ? props.user.name.split(' ')[1] : ''} />\r\n                                        </div>\r\n                                    </div> \r\n                                </div> \r\n                                <div class=\"row\">\r\n                                    <div class=\"col-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"userbio\">Bio</label>\r\n                                            <textarea class=\"form-control\" ref={bio} id=\"userbio\" rows=\"4\" defaultValue={props.user.bio ? props.user.bio : \"Write Something About yourself\"}></textarea>\r\n                                        </div>\r\n                                    </div> \r\n                                </div> \r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"Country\">Country</label>\r\n                                            <select  class=\"form-control\" ref={CountryRef} id=\"Country\" >\r\n                                                <option defaultValue={props.user.country}>{props.user.country}</option>\r\n                                                {countries}\r\n                                            </select>\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"institution\">Institution</label>\r\n                                            <input type=\"text\" ref={institutionRef} class=\"form-control\" id=\"institution\" value={props.user.institution}  />\r\n                                            \r\n                                        </div>\r\n                                    </div> \r\n                                </div> \r\n                                \r\n                                \r\n                                <div class=\"text-right\">\r\n                                    <button type=\"submit\" onClick={async (e)=> {\r\n                                        e.preventDefault();\r\n                                        setisloading(true);\r\n                                        await updateUser(props.user.username,firstName.current.value,lastName.current.value,CountryRef.current.value,institutionRef.current.value,bio.current.value)\r\n                                        setisloading(false);\r\n                                        window.location.reload();\r\n                                        }} class=\"btn btn-success waves-effect waves-light mt-2\"><i class=\"mdi mdi-content-save\" ></i> {isloading ? \"Saving...\" : \"Save\"}</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        :\r\n                        ''\r\n                        }      \r\n                    </div>  \r\n                </div> \r\n        \r\n            </div> \r\n\r\n            <div className=\"row card-box col-12 mb-4\">\r\n                <div className=\"col-12 col-md-11 col-lg-11\">\r\n                        <h5 class=\"mb-4 text-uppercase\"><i class=\"mdi mdi-briefcase mr-1\"></i>\r\n                            Upsolved Question</h5>\r\n        \r\n                            <ul class=\"list-unstyled timeline-sm\" style={{maxHeight: \"100%\",overflowY:\"scroll\",width: \"100%\"}}>\r\n                                <li>\r\n                                \r\n                                        <div className=\"row mb-2 ml-3 p-1 pr-1 pl-2 p-lg-2 p-md-2 offset-md-1 offset-lg-1\" style={{backgroundColor: \"#f1f5f7\",borderColor: \"#dee2e6\",fontSize: \"1rem\",fontFamily: \"open-sans\",fontWeight: \"600\",color: \"#6c757d\",minWidth: \"90%\"}}>\r\n                                            \r\n                                            <p className=\"text-center col-3 col-md-5 col-lg-6 m-auto ml-0\">Name</p>\r\n                                            <p className=\"text-center col-4 col-md-3 col-lg-3 m-auto\">ConestId</p>\r\n                                            <p className=\"text-center col-4 col-md-3 col-lg-3 m-auto ml-5\">Rating</p>\r\n                                        </div>\r\n                                    \r\n                                        \r\n                                </li>\r\n                                {problems}\r\n                                \r\n                            </ul> \r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        \r\n    \r\n    \r\n    )\r\n}\r\n\r\nexport default ProfilePage;","import React, { useEffect, useState } from 'react'\r\nimport NavigationMenu from '../NavigationMenu'\r\nimport {getUserByname} from '../Api/problem.api';\r\nimport ProfilePage from './ProfilePage'\r\nimport {getToken,TokenAuthentication} from '../Api/auth.api'\r\n\r\nfunction ProfileRoute(props) {\r\n    \r\n    const [user,setuser] = useState({});\r\n    const paramUsername = props.match.params.username;\r\n    const [loggedinUser,setloggedinUser] = useState(false)\r\n    \r\n\r\n    useEffect(async () => {\r\n        if(paramUsername === undefined){\r\n        \r\n            window.location = '/error';\r\n            \r\n            \r\n        }\r\n        \r\n        getUserByname(paramUsername).then((User) => {\r\n            if(!User){\r\n                console.log(User);\r\n                window.location = '/error';\r\n                return;\r\n            }\r\n            else{\r\n                let loggedinUsername = null;\r\n                if(getToken()){\r\n                    loggedinUsername = TokenAuthentication().username;      \r\n                }\r\n                if(loggedinUsername === User.username){\r\n                    setloggedinUser(true);\r\n                }\r\n                setuser(User);\r\n            }\r\n        })\r\n        \r\n        \r\n    },[])\r\n    \r\n    \r\n    \r\n    return (\r\n        <div>\r\n           <NavigationMenu></NavigationMenu> \r\n           {user._id ? <ProfilePage user={user} loggedinUser={loggedinUser}></ProfilePage> : <></>}\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileRoute;","\r\nimport fetch from 'node-fetch';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {getUserByname} from './Api/problem.api'\r\nimport {getFirstName,registrationProcess,getToken,TokenAuthentication} from './Api/auth.api'\r\nimport NavigationMenu from './NavigationMenu';\r\nimport BoxTitle from './BoxTitile';\r\nimport {Link} from 'react-router-dom'\r\nimport Countdown from 'react-countdown';\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\nfunction RegisterPage() {\r\n    \r\n    \r\n    const [isloading,setisLoading] = useState(false);\r\n    const [Error,setError] = useState(\"\");\r\n    const [username,setusername] = useState(\"\");\r\n    const [password,setpassword] = useState(\"\");\r\n    const [confirmpassword,setconfirmpassword] = useState(\"\");\r\n    const [country,setcountry] = useState(\"\");\r\n    const [institution,setinstitution] = useState(\"\");\r\n    const [bio,setbio] = useState(\"\");\r\n    const [validatePassword,setvalidatePassword] = useState(\"Please fill out this field\");\r\n    const [optPgae,setoptPage] = useState(false);\r\n    const [optCode,setoptCode] = useState(false);\r\n    const [timer,settimer] = useState(0);\r\n    const country_list = require('country-list');\r\n\r\n    useEffect(()=>{\r\n\r\n        if(getToken()){\r\n            let payload = TokenAuthentication();\r\n            window.location = '/profile/'+payload.username;\r\n        }\r\n        \r\n        if(timer>0){\r\n            setTimeout(()=> {settimer(timer - 1)},1000);\r\n        }\r\n    },[timer])\r\n\r\n\r\n    let init = ()=>{\r\n        setusername(\"\");\r\n        setpassword(\"\");\r\n        setconfirmpassword(\"\");\r\n        setcountry(\"\");\r\n        setinstitution(\"\");\r\n        setbio(\"\");\r\n        setvalidatePassword(\"Please fill out this field\")\r\n        setError(\"\");\r\n        setisLoading(false);\r\n        setoptCode(false);\r\n        settimer(0);\r\n    }\r\n    \r\n    let checkPassword = (e) => {\r\n        let psw = e.target.value;\r\n\r\n        if(psw.length < 8){\r\n            setvalidatePassword(\"Atleast 8 characters required\");\r\n            return;\r\n        }\r\n\r\n        if(!psw.match(/[a-z]/g)){\r\n            setvalidatePassword(\"Lowercase character is required\");\r\n            return;\r\n        }\r\n\r\n        if(!psw.match(/[A-Z]/g)){\r\n            setvalidatePassword(\"Uppercase character is required\");\r\n            return;\r\n        }\r\n\r\n        if(!psw.match(/[0-9]/g)){\r\n            setvalidatePassword(\"A digit is required\");\r\n            return;\r\n        }\r\n\r\n        if(!psw.match(/[!\"#$%&'()*+,-.:;<=>?@[\\]^_`{|}~]/)){\r\n            setvalidatePassword(\"Special character is required\");\r\n            return;\r\n        }\r\n        setvalidatePassword(true);\r\n    }\r\n\r\n    const renderer = (timer) => {\r\n        let minutes = parseInt(timer/60);\r\n        let seconds = parseInt(timer - (minutes*60));\r\n        if (timer<=0) {\r\n          \r\n          if(optPgae && !isloading){\r\n            init();\r\n            setoptPage(false);\r\n          }\r\n          return <span>{\"00:00\"}</span>    \r\n        }\r\n        else{ // Render a countdown\r\n        return <span>{\"0\"+minutes}:{seconds<10 ? \"0\"+seconds : seconds}</span>;\r\n        }\r\n      };\r\n\r\n    return(\r\n\r\n        \r\n        <div>\r\n\r\n            <NavigationMenu></NavigationMenu>\r\n            \r\n            {Error !== \"\" ? \r\n            <div className=\"alert-heading text-center p-1 m-auto bg-danger text-light alert-animation\" style={{width: \"30%\",borderRadius: \"5px\",\"fontSize\": \"1.2rem\"}}>\r\n                {Error}\r\n            </div> \r\n            \r\n            : ''}\r\n\r\n            <div className=\"box\">\r\n                <BoxTitle title=\"Register\"></BoxTitle>\r\n                {optPgae === false ?\r\n                <div className={\"box-content-dimension mb-5\"+ (isloading ? \" loading\" : \"\")}>\r\n                    \r\n                    <div className=\"box-form p-4\">\r\n                        \r\n                            <div class=\"form-group\">\r\n                                <label>Username:</label>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Enter codeForces Handle\" onChange={(e) => {setusername(e.target.value)}} required />\r\n                                {username === \"\" ? <div class=\"text-danger\">Please fill out this field.</div> : ''}\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label>Country: <select onChange={(e) => {setcountry(e.target.value)}}>\r\n                                                    <option value=\"\">--Select--</option>\r\n                                                    {country_list.getNames().map((ct) => <option value={ct}>{ct}</option>)}\r\n                                                </select>\r\n                                </label>\r\n                                \r\n                            </div>\r\n                            <div class=\"form-group\" style={{display: \"none\"}}>\r\n                                <label>Institution: <select onChange={(e) => {setinstitution(e.target.value)}}>\r\n                                                    <option value=\"India\">India</option>\r\n                                                </select>\r\n                                </label>\r\n                                \r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label>Password:</label>\r\n                                <input type=\"password\" class=\"form-control\" onChange={(e) => {setpassword(e.target.value);checkPassword(e)}} placeholder=\"Enter password\" required />\r\n                                {validatePassword !== true ? <div class=\"text-danger\">{validatePassword}</div> : ''}\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label>Confirm Password:</label>\r\n                                <input type=\"password\" class=\"form-control\" onChange={(e) => {setconfirmpassword(e.target.value)}} placeholder=\"Confrim Password\" required />\r\n                                {confirmpassword === \"\" ? <div className=\"text-danger\">Please fill out this field.</div> : (confirmpassword !== password ? <div className=\"text-danger\">Should match the password</div> : '')}\r\n                                \r\n                            </div>\r\n                            \r\n                        \r\n                    </div>\r\n                    <button type=\"submit\" className=\"shadow\" onClick={async () => {\r\n                        if(validatePassword !== true || username === \"\" || password !== confirmpassword){return}\r\n                        setisLoading(true);\r\n                        let result = await getUserByname(username);\r\n                        console.log(result);\r\n                        if(!result || result === false){\r\n                            var OTP = Math.ceil(Math.random()*1000000);\r\n                            \r\n                            \r\n                            \r\n                            \r\n                            settimer(90);\r\n                            setoptCode(OTP);\r\n                            setisLoading(false);\r\n                            setoptPage(true);\r\n                        }\r\n                        else{\r\n                            setisLoading(false);\r\n                            setError(\"User name already exists\");\r\n                            \r\n\r\n                            setTimeout(() => {\r\n                                setError(\"\");\r\n                            },5000)\r\n                            return;\r\n                        }\r\n                    }}>{isloading ? \"Loading...\" : \"Next\"}</button>\r\n\r\n                            \r\n                    <Link to=\"/login\">Already Have an account</Link>\r\n                            \r\n                </div>\r\n                :\r\n                <div className={\"box-content-dimension mb-5\"+(isloading ? \" loading\" : \"\")}>\r\n                    <h1>{renderer(timer)}</h1>\r\n                    <p>Change the first name of your codeForces handle to this \"<b>{optCode}</b>\" (Without Quote).</p>\r\n                    <button className={isloading ? \" loading\" : \"\"} onClick={async () => {\r\n                        setisLoading(true);\r\n                        let result = await getFirstName(username);\r\n                        \r\n                        if(parseInt(result) !== parseInt(optCode)){\r\n                            setisLoading(false);\r\n                            init();\r\n                            setError(\"Unable to verify\");\r\n                            setoptPage(false);\r\n                            setTimeout(() => {\r\n                                setError(\"\");\r\n                            },5000)\r\n                        }\r\n                        else{\r\n                            let register = await registrationProcess(username,password,country,institution,bio);\r\n                            if(!register || register===false){\r\n                                setisLoading(false);\r\n                                init();\r\n                                setError(\"Unable to Register\");\r\n                                setoptPage(false);\r\n                            }\r\n                            else{\r\n                                setisLoading(false);\r\n                                init();\r\n                                setError(\"\");\r\n                                setoptPage(false)\r\n                                setTimeout(() => {\r\n                                    setError(\"\");\r\n                                },5000)\r\n                                window.location = \"/login\";\r\n                            }\r\n                        }\r\n                    }}>{isloading ? \"Verifying...\" : \"Verify\"}</button>\r\n                    <Link to=\"/login\">Already Have an account</Link>\r\n                </div>\r\n                }\r\n            </div>\r\n\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","import './App.css';\r\nimport {BrowserRouter as Router, Link, Route, Switch} from 'react-router-dom';\r\nimport LeaderboardPage from './Leaderboard/LeaderboardPage';\r\nimport Challenge from './Challenge/Challenge'\r\nimport LoginPage from './loginPage';\r\nimport HomePage from './HomePage';\r\nimport LogoutPage from './LogoutPage';\r\nimport ErrorPage from './ErroPage';\r\nimport ProfileRoute from './Profile/ProfileRoute';\r\nimport RegisterPage from './RegisterPage';\r\n\r\nfunction App() {\r\n    console.log(\"Hello\")\r\n    return(\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/leaderboard\" component={LeaderboardPage}></Route>\r\n                <Route exact path=\"/challenge\" component={Challenge}></Route>\r\n                <Route exact path=\"/login\" component={LoginPage}></Route>\r\n                <Route exact path=\"/register\" component={RegisterPage}></Route>\r\n                <Route exact path=\"/logout\" component={LogoutPage}></Route>\r\n                <Route exact path=\"/profile/:username\" component={ProfileRoute}></Route>\r\n                <Route exact path=\"/\" component={HomePage}></Route>\r\n                <Route component={ErrorPage}></Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  \r\n    <App />,\r\n  \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}