{"version":3,"sources":["Leaderboard/entry.js","constants.js","Api/problem.api.js","Leaderboard/leaderboard.js","Api/auth.api.js","NavigationMenu.js","Leaderboard/LeaderboardPage.js","Challenge/ChallengeTimer.js","Challenge/ProblemCardTitle.js","Challenge/ProblemDescription.js","Challenge/ChallengeDailyQues.js","Challenge/ChallengeUpsolveQues.js","Challenge/ChallengeContent.js","authGaurd.js","Challenge/Challenge.js","BoxTitile.js","loginPage.js","HomePage.js","LogoutPage.js","ErroPage.js","Profile/ProfilePage.js","Profile/ProfileRoute.js","RegisterPage.js","Api/feedback.api.js","About/ContactUs.js","About/Team.js","About/UpsolveDesc.js","About/AboutPage.js","App.js","reportWebVitals.js","index.js"],"names":["Entry","this","props","id","percentage","parseInt","streak","to","name","style","textDecoration","class","offset","className","value","text","styles","root","path","stroke","strokeLinecap","transition","transformOrigin","trail","fill","fontSize","fontWeight","background","React","Component","config","url","cf","toString","getUser","a","fetch","then","res","json","getUserByname","username","type","payload","problem","index","contestId","skip","limit","filter","country","institution","Leaderboard","useState","items","setItems","setskip","count","setcount","loading","setloading","useEffect","LeaderboardList","result","data","board","push","Skeleton","variant","width","height","length","forEach","el","i","containerClassName","pageCount","Math","ceil","pageRangeDisplayed","marginPagesDisplayed","initialPage","previousLabel","nextLabel","activeClassName","onPageChange","e","selected","color","getToken","window","localStorage","getItem","TokenAuthentication","token","JSON","parse","atob","split","loginProcess","password","method","headers","body","stringify","status","setItem","location","updateUser","firstName","lastName","bio","catch","err","registrationProcess","getFirstName","users","console","log","NavigationMenu","setstatus","setpayload","open","setOpen","onClick","cursor","Tooltip","title","arrow","href","top","left","data-toogle","data-palcement","removeItem","LeaderboardPage","country_list","require","countries","getNames","map","setfilter","action","for","onChange","target","disabled","ChallengeTimer","Date","timer","settimer","setInterval","textShadow","hours","getHours","minutes","getMinutes","seconds","getSeconds","ProblemCardTitle","undefined","upsolve","solved","ProblemDescription","checking","setchecking","Error","link","rating","Check","updatesolved","updateupsolve","margin","borderRadius","role","refresh","ChallengeDailyQues","setproblem","setsolved","_id","user","dailyQuestion","problemError","setproblemError","ChallengeUpsolveQues","setupsolve","UpsolveQuestion","max","ChallengeContent","AuthGaurd","children","Challenge","BoxTitle","LoginPage","error","setError","isLoading","setisLoading","placeholder","previousSibling","childNodes","setTimeout","radius","position","mesh","useRef","current","useFrame","rotation","y","x","cos","PI","z","sin","gltf","useLoader","GLTFLoader","onPointerOver","document","onPointerOut","onPointerDown","ref","object","scene","scale","About","UpsolveText","HomePage","innerWidth","innerHeight","minWidth","minHeight","colorManagement","shadowMap","camera","fov","far","pixelRatio","min","intensity","fallback","Stars","depth","OrbitControls","minPolarAngle","LogoutPage","ErrorPage","ProfilePage","isloading","setisloading","CountryRef","institutionRef","problems","series","maxUpsolved","UpsolveStreak","Object","keys","key","problemDescription","contestLink","problemLink","fontFamily","whiteSpace","overflowX","textOverflow","unshift","src","alt","data-toggle","aria-expanded","loggedinUser","options","grid","show","chart","stacked","animations","enabled","zoom","autoScaleYaxis","toolbar","autoSelected","dataLabels","markers","size","align","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","yaxis","xaxis","formate","tooltip","shared","curve","defaultValue","rows","preventDefault","reload","maxHeight","overflowY","backgroundColor","borderColor","ProfileRoute","setuser","paramUsername","match","params","setloggedinUser","User","loggedinUsername","RegisterPage","setusername","setpassword","confirmpassword","setconfirmpassword","setcountry","setinstitution","setbio","validatePassword","setvalidatePassword","optPgae","setoptPage","optCode","setoptCode","init","required","ct","display","psw","checkPassword","OTP","random","renderer","register","AddFeedback","email","feedback","ContactUs","HandleSubmit","rowGap","onSubmit","Team","descnum","setdescNum","description","transform","UpsolveDesc","AboutPage","App","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.83886604.chunk.js","sourcesContent":["import React from 'react';\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport {Link} from 'react-router-dom'\r\nexport default class Entry extends React.Component{\r\n\r\n    \r\n    render(){\r\n        let id = \"table\"+this.props.id;\r\n        let percentage = parseInt((this.props.streak/30)*100);\r\n        \r\n        return(\r\n            <Link to={\"/profile/\"+this.props.name} style={{textDecoration: \"none\"}}>\r\n            <div class=\"entry shadow\">\r\n                \r\n                <div class=\"rank\">{this.props.id + parseInt(this.props.offset) + 1} </div>\r\n                <div class=\"names\">{this.props.name}</div>\r\n                <CircularProgressbar className=\"PB\"\r\n                  value={percentage}\r\n                  text={this.props.streak}\r\n                  styles={{\r\n                    // Customize the root svg element\r\n                    root: {},\r\n                    // Customize the path, i.e. the \"completed progress\"\r\n                    path: {\r\n                      // Path color\r\n                      stroke: 'linear-gradient(#0052D4, #4364F7, #6FB1FC)',\r\n                      // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                      strokeLinecap: 'butt',\r\n                      // Customize transition animation\r\n                      transition: 'stroke-dashoffset 0.5s ease 0s',\r\n                      // Rotate the path\r\n                    //   transform: 'rotate(0.25turn)',\r\n                      transformOrigin: 'center center',\r\n                    },\r\n                    // Customize the circle behind the path, i.e. the \"total progress\"\r\n                    trail: {\r\n                      // Trail color\r\n                      stroke: '#d6d6d6',\r\n                      // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                      strokeLinecap: 'butt',\r\n                      // Rotate the trail\r\n                    //   transform: 'rotate(0.25turn)',\r\n                      transformOrigin: 'center center',\r\n                    },\r\n                    // Customize the text\r\n                    text: {\r\n                      // Text color\r\n                      fill: 'linear-gradient(#0052D4, #4364F7, #6FB1FC)',\r\n                      // Text size\r\n                      fontSize: '2rem',\r\n                      fontWeight: '800'\r\n                    },\r\n                    // Customize background - only used when the `background` prop is true\r\n                    background: {\r\n                      fill: 'transparent',\r\n                    },\r\n                  }}\r\n                />\r\n                    \r\n                \r\n            </div>\r\n            </Link>\r\n        )\r\n    }\r\n};","let dev = {\r\n    url: \"https://up-solve.herokuapp.com\",\r\n}\r\nlet prod = {\r\n    url: \"https://up-solve.herokuapp.com\",\r\n}\r\n\r\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;","import fetch from \"node-fetch\";\r\nimport {config as cf} from '../constants';\r\n\r\nlet config = cf.url.toString();\r\n\r\nlet getToken = () =>{\r\n    return window.localStorage.getItem(\"token\");\r\n}\r\n\r\nasync function  getUser(id) {\r\n    if(!id){\r\n        return false;\r\n    }\r\n    return fetch(config+'/api/users/getUser/'+id).then(res => res.json());\r\n}\r\nasync function  getUserByname(username) {\r\n    if(!username){\r\n        return false;\r\n    }\r\n    return fetch(config+'/api/users/getUserByname/'+username).then(res => res.json())\r\n}\r\nasync function Check(props,type) {\r\n    return fetch(config+'/api/problem/check/'+type+'?username='+props.payload.username+'&name='+props.problem.name+'&index='+props.problem.index+'&contestId='+props.problem.contestId).then(res => res.json())\r\n}\r\n\r\nasync function dailyQuestion(props) {\r\n    return fetch(config+'/api/problem/dailyques/'+props.payload.username).then(res => res.json())\r\n}\r\nasync function UpsolveQuestion(props) {\r\n    return fetch(config+'/api/problem/upsolve/'+props.payload.username).then(res => res.json())\r\n}\r\n\r\n\r\n\r\nasync function LeaderboardList(skip,limit,filter) {\r\n    return fetch(config+'/api/users/list?skip='+((skip-1)*limit)+'&limit='+limit+'&country='+filter.country+'&institution='+filter.institution+'&username='+filter.username).then(res => res.json());\r\n}\r\n\r\nasync function Profile() {\r\n    return fetch(config+'/api/users/profile',{\r\n        method:\"get\",\r\n        headers: {\r\n            \"Authorization\": getToken(),\r\n\r\n        }\r\n    }).then(res => res.json());\r\n}\r\n\r\n\r\nexport {Check,dailyQuestion,UpsolveQuestion,LeaderboardList,Profile,getUser,getUserByname};","import {useState,useEffect} from 'react'; \r\nimport Entry from './entry';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Paginate from 'react-paginate';\r\nimport {LeaderboardList} from '../Api/problem.api';\r\n\r\nfunction Leaderboard(props) {\r\n\r\n    \r\n\r\n    \r\n    const [items,setItems] = useState([]);\r\n    const [skip,setskip] = useState(1);\r\n    const [limit,setlimit] = useState(20);\r\n    const [count,setcount] = useState(0);\r\n    const [loading,setloading] = useState(true);\r\n    const filter = props.filter;\r\n    useEffect(()=>{\r\n        setskip(1);\r\n    },[filter])\r\n    useEffect(()=>{\r\n        setloading(true);\r\n        LeaderboardList(skip,limit,filter).then((result)=>{\r\n            setloading(false);\r\n            setItems(result.data);\r\n            setcount(result.count);\r\n        })  \r\n    },[skip,limit,filter]);\r\n\r\n\r\n    \r\n    var board = [];\r\n    \r\n    if(loading){\r\n        board.push(<Skeleton variant=\"rect\" width=\"100%\" height={40}></Skeleton>);\r\n        board.push(<Skeleton variant=\"rect\" width=\"100%\" height={40}></Skeleton>);\r\n        board.push(<Skeleton variant=\"rect\" width=\"100%\" height={40}></Skeleton>);\r\n        board.push(<Skeleton variant=\"rect\" width=\"100%\" height={40}></Skeleton>);\r\n        board.push(<Skeleton variant=\"rect\" width=\"100%\" height={40}></Skeleton>);\r\n        return board;\r\n    }\r\n\r\n    if(!items || items.length == 0){\r\n        board.push(<h1 style={{color: \"Orange\"}}>!! No User found !!</h1>);\r\n        return board;\r\n    }\r\n    // console.log(items);\r\n    items.forEach((el,i) => {\r\n        board.push(<Entry offset={(skip-1)*limit} id={i} name={el.username} streak={el.streak} />);\r\n    })\r\n    board.push(\r\n            \r\n            <Paginate containerClassName=\"paginate\" pageCount={Math.ceil(count/limit)} pageRangeDisplayed={5} marginPagesDisplayed={3} initialPage={skip - 1} previousLabel=\"<<\" nextLabel=\">>\" activeClassName=\"active-page\" onPageChange={(e)=>{setskip((e.selected) + 1)}}></Paginate>\r\n\r\n            \r\n        )\r\n    return board;\r\n}\r\n\r\nexport default Leaderboard;","// import { post } from \"../../../api/users.api\";\r\nimport {config as cf} from '../constants';\r\n\r\nlet config = cf.url;\r\n\r\nfunction getToken() {\r\n    return window.localStorage.getItem(\"token\") || false;\r\n}\r\n\r\nfunction TokenAuthentication() {\r\n    let token = getToken();\r\n    if(!token){\r\n        return false;\r\n    }\r\n    let payload = JSON.parse(atob(token.split('.')[1]));\r\n    return payload;\r\n}\r\n\r\nasync function loginProcess(username,password) {\r\n    \r\n    \r\n    return fetch(config+'/api/users/login',{\r\n        method: \"post\",\r\n        headers:{\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            username,password\r\n        })\r\n    }).then(res => res.json()).then((data) => {\r\n        if(data.status){\r\n            window.localStorage.setItem(\"token\",data.token);\r\n            window.location = \"/challenge\";\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n            \r\n        }\r\n    });\r\n}  \r\n\r\nasync function updateUser(username,firstName,lastName,country,institution,bio) {\r\n    return fetch(config+'/api/users/updateuser',{\r\n        method: \"post\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            username: username,\r\n            name: firstName+\" \"+lastName,\r\n            country: country,\r\n            institution: institution,\r\n            bio: bio\r\n        })\r\n    }).then(res => res.json()).then((result) => {return true}).catch(err => {return false});\r\n}\r\n\r\nasync function registrationProcess(username,password,country,institution,bio) {\r\n    return fetch(config+'/api/users/register',{\r\n        method: \"post\",\r\n        headers:{\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            username,\r\n            password,\r\n            country,\r\n            institution,\r\n            bio\r\n        })\r\n    }).then(res => res.json()).then((result) => {return result.status}).catch((err) => {return false});\r\n}\r\n\r\nfunction getFirstName(username) {\r\n    return fetch('https://codeforces.com/api/user.info?handles='+username).then(res => res.json()).then(users=> {\r\n        if(users.status===\"OK\"){\r\n            return users.result[0].firstName;\r\n        }else{\r\n            return false;\r\n        }\r\n    }).catch(err => {\r\n        console.log(err);\r\n        return false;\r\n    })\r\n}\r\n\r\nfunction logout() {\r\n    window.localStorage.removeItem(\"token\");\r\n    window.location = '/'\r\n}\r\n\r\nexport {getToken,TokenAuthentication,loginProcess,logout,getFirstName,registrationProcess,updateUser};","import React,{useState,useEffect} from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport {logout,TokenAuthentication} from './Api/auth.api';\r\nimport {Link} from 'react-router-dom'\r\nfunction NavigationMenu() {\r\n\r\n    const [status,setstatus] = useState(false);\r\n    const [payload,setpayload] =useState({});\r\n    const [open,setOpen] = useState(false);\r\n\r\n\r\n    useEffect(()=>{\r\n        let payload = TokenAuthentication();\r\n        if(payload){\r\n            setstatus(true);\r\n            setpayload(payload)\r\n        }\r\n    },[])\r\n\r\n    let Toggler = ()=>{\r\n        setOpen(!open);\r\n    }\r\n\r\n    return (\r\n        <section class=\"navigation-menu\">\r\n            <div class=\"nav-bar col-12\">\r\n                <p class=\"text-center\" onClick={() => window.location = \"/\"} style={{cursor: \"pointer\"}}>Upsolve</p>\r\n                <div class=\"nav-items col-lg-3 col-6 text-center\">\r\n                    <a onClick={(e) => {Toggler()}} className=\"position-relative back-btn\" >\r\n                        <Tooltip title=\"Navigate\" arrow>\r\n                            <div>\r\n                                <i class=\"fa fa-rocket\"></i>\r\n                            </div>\r\n                        </Tooltip>\r\n                        {open ? \r\n                        <>\r\n                        <a href=\"/\" className=\"position-absolute back-btn\" style={{top: \"120%\", left: \"-120%\"}}>\r\n                            <Tooltip title=\"Home\" arrow>\r\n                                <div>\r\n                                    <i class=\"fa fa-home\"></i>\r\n                                </div>\r\n                            </Tooltip>\r\n                            \r\n                        </a>\r\n                        <a href=\"/leaderboard\" className=\"position-absolute back-btn\" style={{top: \"170%\", left: \"0%\"}}>\r\n                            <Tooltip title=\"Leaderboard\" arrow>\r\n                                <div>\r\n                                    <i class=\"fa fa-trophy\"></i>\r\n                                </div>\r\n                            </Tooltip>\r\n                            \r\n                        </a>\r\n                        <a href=\"/challenge\" className=\"position-absolute back-btn\" style={{top: \"120%\", left: \"120%\"}}>\r\n                            <Tooltip title=\"Challenge\" arrow>\r\n                                <div>\r\n                                    <i class=\"fa fa-calendar-check-o\"></i>\r\n                                </div>\r\n                            </Tooltip>\r\n                            \r\n                        </a>\r\n                        </>\r\n                        : \r\n                         <></>       \r\n                        }                       \r\n                    </a>\r\n                    <a href={status ? \"/profile/\"+payload?.username : \"/login\"} data-toogle=\"tooltip\" data-palcement=\"bottom\" title={status ? payload?.username : \"Login/Register\"}>\r\n                        <Tooltip title={status ? payload?.username : \"Login/Register\"} arrow>\r\n                            <div>\r\n                                <i class=\"fa fa-user\"></i>\r\n                            </div>\r\n                        </Tooltip>\r\n                    </a>\r\n                    {status && <a href=\"#\" data-toogle=\"tooltip\" data-palcement=\"bottom\" title=\"Logout\">\r\n                        <Tooltip title=\"Logout\" arrow>\r\n                            <div onClick={() => {logout()}}>\r\n                                <i class=\"fa fa-sign-out\"></i>\r\n                            </div>\r\n                        </Tooltip>\r\n                    </a>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default NavigationMenu;\r\n","\r\nimport { useEffect, useState } from 'react';\r\nimport '../App.css';\r\nimport Leaderboard from './leaderboard';\r\n\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport NavigationMenu from '../NavigationMenu';\r\n\r\nfunction LeaderboardPage() {\r\n    const country_list = require('country-list');\r\n    let countries = [];\r\n    country_list.getNames().map((country) => {\r\n        countries.push(<option value={country}>{country}</option>)\r\n    })\r\n    const [filter,setfilter] = useState({country:'',institution: '',username:''});\r\n    \r\n    \r\n    \r\n  return (\r\n    <div className=\"App\">\r\n        \r\n        {<NavigationMenu></NavigationMenu> || <Skeleton width=\"100%\" height=\"2rem\"></Skeleton>}\r\n        <section class=\"Leaderboard\">\r\n\r\n                <div class=\"container-fluid leaderboard-container col-lg-8 col-md-6 col-11\">\r\n                    <div class=\"leaderboard-title\">\r\n                        <p>Leaderboard</p>\r\n                    </div>\r\n                    <div class=\"leaderboard-table\">\r\n                        \r\n                    <Leaderboard filter={filter} /> \r\n                        \r\n                        \r\n\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div class=\"container-fluid col-lg-3 col-md-4 col-11 filters\">\r\n                    <div class=\"filter-title\">\r\n                        <p>Filter</p>\r\n                    </div>\r\n                    <div class=\"filter-form row\">\r\n                        <form action=\"#\">\r\n                            <label for=\"country\">Country: </label>\r\n                            <select name=\"country\" onChange={(e)=> {setfilter({...filter,country:e.target.value})}} class=\"col-7\" id=\"country\">\r\n                                <option value=\"\">Any</option>\r\n                                {countries}\r\n                            </select>\r\n                            <label for=\"institution\">Institution: </label>\r\n                            <select name=\"institution\" disabled onChange={(e)=> {setfilter({...filter,institution:e.target.value})}} class=\"col-7\" id=\"institution\">\r\n                                <option value=\"\"></option>\r\n                            </select>\r\n                            <label for=\"username\">Username: </label>\r\n                            <input type=\"text\" name=\"username\" onChange={(e)=> {setfilter({...filter,username:e.target.value})}} class=\"col-7\" id=\"username\"/>\r\n                            {/* <input type=\"submit\" class=\"btn-primary\" value=\"Submit\"/> */}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n        \r\n        </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeaderboardPage;\r\n","import {useState,useEffect} from 'react';\r\nfunction ChallengeTimer() {\r\n    \r\n    const [timer,settimer] = useState(new Date());\r\n\r\n    useEffect(()=>{\r\n        setInterval(()=>{settimer(new Date())},1000);\r\n        \r\n    },[]);\r\n\r\n    let getHours = () =>{\r\n        \r\n        let hours = parseInt(23 - timer.getHours());\r\n        if(hours < 10){\r\n            hours = \"0\"+hours;\r\n        }\r\n        return hours;\r\n    }\r\n    let getMinutes = () =>{\r\n        \r\n        let minutes = parseInt(59 - timer.getMinutes());\r\n        if(minutes < 10){\r\n            minutes = \"0\"+minutes;\r\n        }\r\n        return minutes;\r\n    }\r\n    let getSeconds = () =>{\r\n        \r\n        let seconds = parseInt(59 - timer.getSeconds());\r\n        if(seconds < 10){\r\n            seconds = \"0\"+seconds;\r\n        }\r\n        return seconds;\r\n    }\r\n\r\n    return(\r\n        <h1 style={{color:\"white\",textShadow:\"0px 0px 15px red\"}}>{getHours()} : {getMinutes()} : {getSeconds()}</h1>\r\n    )\r\n    \r\n}\r\n\r\nexport default ChallengeTimer;","import { PromiseProvider } from 'mongoose';\r\nimport React from 'react';\r\n\r\nfunction ProblemCardTitle(props) {\r\n    \r\n    return(\r\n        \r\n        <div className=\"problem-card-title\">\r\n            <div className=\"checkmark-circle\">\r\n                {props.upsolve===undefined ? <div className={props.solved ?\"checkmark draw\":\"\"}></div> : <p>{props.upsolve}</p>}\r\n            </div>\r\n            <h1>{props.title}</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProblemCardTitle;","import Skeleton from '@material-ui/lab/Skeleton';\r\nimport fetch from 'node-fetch';\r\nimport React, { useEffect,useState } from 'react';\r\nimport {Check} from '../Api/problem.api';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nfunction ProblemDescription(props) {\r\n\r\n    const [checking,setchecking] = useState(false);\r\n\r\n    let CheckProblem = () =>{\r\n        setchecking(true);\r\n        \r\n        Check(props,props.upsolve!==undefined ? \"upsolve\" : \"daily\").then((result) => {\r\n            setchecking(false);\r\n            \r\n            if(result === true){\r\n                props.upsolve===undefined ? props.updatesolved(true) : props.updateupsolve(true);\r\n            }\r\n        })\r\n    }\r\n    \r\n    return(\r\n        props.Error===null ?\r\n            !props.solved ?\r\n            (props.problem?.name ? \r\n            <div className=\"problem-description\">\r\n                <div className=\"description\">\r\n                    <label>Problem: </label>\r\n                    <a href={props.problem?.link} target=\"_blank\">{props.problem?.name}</a>\r\n                    <label>ContestID: </label>\r\n                    <a href={\"https://codeforces.com/contest/\"+props.problem?.contestId} target=\"_blank\">{props.problem?.contestId}</a>\r\n                    <label>Rating: </label>\r\n                    <p>{props.problem?.rating}</p>\r\n                </div>\r\n                <button className=\"shadow\" onClick={CheckProblem} disabled={checking}>{checking?\"Checking...\":\"Check\"}</button>\r\n  \r\n            </div>\r\n            :\r\n            <div style={{width:\"100%\"}}>\r\n                <Skeleton width=\"78%\" height=\"3rem\" style={{margin:\"0.7rem auto\",color:\"grey\",borderRadius:\"999px\"}}></Skeleton>\r\n                <Skeleton width=\"78%\" height=\"3rem\" style={{margin:\"0 auto 0.7rem auto\",color:\"grey\",borderRadius:\"999px\"}}></Skeleton>\r\n                <Skeleton width=\"78%\" height=\"3rem\" style={{margin:\"0 auto 0.7rem auto\",color:\"grey\",borderRadius:\"999px\"}}></Skeleton>\r\n                <Skeleton width=\"78%\" height=\"3rem\" style={{margin:\"0 auto 0.7rem auto\",color:\"grey\",borderRadius:\"999px\"}}></Skeleton>\r\n            </div>)\r\n            :\r\n            (\r\n                <div className=\"problem-description\">\r\n                    <h1>Solve More upsolve questions</h1>\r\n                </div>\r\n            ) \r\n        :\r\n        (\r\n            <div className=\"problem-description\">\r\n                <h1>{props.Error} <Tooltip title=\"Refresh\" arrow><i className=\"fa fa-refresh\" role=\"button\" onClick={() => {props.refresh()}}></i></Tooltip></h1>\r\n            </div>\r\n        )   \r\n    )\r\n}\r\n\r\nexport default ProblemDescription;","import React from 'react';\r\nimport ProblemCardTitle from './ProblemCardTitle'\r\nimport ProblemDescription from './ProblemDescription'\r\nimport  { useEffect, useState } from 'react';\r\nimport {dailyQuestion,getUser} from '../Api/problem.api';\r\nfunction ChallengeDailyQues(props) {\r\n\r\n    const [problem,setproblem] = useState({\r\n        name: \"\",\r\n        contestId: \"\",\r\n        index: \"\",\r\n        link: \"\",\r\n        rating: \"\",\r\n    });\r\n    const [solved,setsolved] = useState(\"\");\r\n    getUser(props.payload._id).then((user) => {setsolved(user.dailyQuestion)})\r\n    const [problemError,setproblemError] = useState(null);\r\n    useEffect(()=>{\r\n        if(!solved && solved !== \"\"){\r\n            dailyQuestion(props).then((problem)=>{\r\n                if(problem === false){\r\n                    setproblemError(\"Unable to fetch the Problem\")\r\n                    \r\n                }\r\n                else{\r\n                    setproblem(problem);\r\n                    setproblemError(null);\r\n                }\r\n            })\r\n        }\r\n    },[problemError,solved])\r\n    return(\r\n\r\n        <div className=\"dailyques-section\">\r\n            \r\n            <ProblemCardTitle solved={solved} title=\"Daily Question\"></ProblemCardTitle>\r\n            <ProblemDescription payload={props.payload} problem={problem} Error={problemError} refresh={() => {setproblemError(null)}} solved={solved} updatesolved={(result)=> {setsolved(result)}}></ProblemDescription>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChallengeDailyQues;","import Skeleton from '@material-ui/lab/Skeleton';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ProblemCardTitle from './ProblemCardTitle'\r\nimport ProblemDescription from './ProblemDescription'\r\nimport {UpsolveQuestion,getUser} from '../Api/problem.api'\r\n\r\nfunction ChallengeUpsolveQues(props) {\r\n\r\n    const [problem,setproblem] = useState({\r\n        name: \"\",\r\n        contestId: \"\",\r\n        index: \"\",\r\n        link: \"\",\r\n        rating: \"\",\r\n    });\r\n    \r\n    const [upsolve,setupsolve] = useState(-1);\r\n    getUser(props.payload._id).then((user) => {setupsolve(user.UpsolveQuestion)})\r\n    const [problemError,setproblemError] = useState(null);\r\n    useEffect(()=>{\r\n        if(upsolve >= 0){\r\n            UpsolveQuestion(props).then((problem)=>{\r\n                \r\n                if(problem === false){\r\n                    setproblemError(\"Unable to fetch the Problem\")\r\n                    \r\n                }\r\n                else{\r\n                    setproblem(problem);\r\n                    setproblemError(null);\r\n                }\r\n            });\r\n        }\r\n    },[problemError,upsolve])\r\n    return(\r\n        \r\n           <div className=\"Upsolveques-section\">\r\n                \r\n                <ProblemCardTitle upsolve={Math.max(0,upsolve)} title=\"Upsolve Question\"></ProblemCardTitle>\r\n                <ProblemDescription payload={props.payload} problem={problem} Error={problemError} refresh={() => {setproblemError(null)}} solved={false} upsolve={upsolve} updateupsolve={(result)=> {setupsolve(upsolve + 1);setproblemError(null)}}></ProblemDescription>\r\n            </div>\r\n            \r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default ChallengeUpsolveQues;","import React,{useEffect,useState} from 'react';\r\nimport ChallengeTimer from './ChallengeTimer'\r\nimport ChallengeDailyQues from './ChallengeDailyQues'\r\nimport ChallengeUpsolveQues from './ChallengeUpsolveQues'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport {TokenAuthentication} from '../Api/auth.api';\r\n\r\nfunction ChallengeContent() {\r\n\r\n    const [payload,setpayload] = useState({});\r\n\r\n    useEffect(()=> {\r\n        let user = TokenAuthentication();\r\n        if(user){\r\n            setpayload(user);\r\n        }\r\n    },[])\r\n    return(\r\n\r\n        \r\n        \r\n        <div className=\"challenge text-center\">\r\n            <ChallengeTimer></ChallengeTimer>\r\n            {\r\n                <div className=\"problem-container\">\r\n                    <ChallengeDailyQues payload={payload}></ChallengeDailyQues>\r\n                    <ChallengeUpsolveQues payload={payload}></ChallengeUpsolveQues>\r\n                </div>\r\n            ||\r\n                <div className=\"text-center\" style={{width:\"100%\",margin:\"auto\"}}> \r\n                    <Skeleton width=\"80%\" height=\"4rem\" style={{color:\"grey\",margin:\"auto\",borderRadius: \"999px\"}}></Skeleton>\r\n                    <Skeleton width=\"80%\" height=\"4rem\" style={{color:\"grey\",margin:\"auto\",borderRadius: \"999px\"}}></Skeleton>\r\n                    <Skeleton width=\"80%\" height=\"4rem\" style={{color:\"grey\",margin:\"auto\",borderRadius: \"999px\"}}></Skeleton>\r\n                    <Skeleton width=\"80%\" height=\"4rem\" style={{color:\"grey\",margin:\"auto\",borderRadius: \"999px\"}}></Skeleton>\r\n                    <Skeleton width=\"80%\" height=\"4rem\" style={{color:\"grey\",margin:\"auto\",borderRadius: \"999px\"}}></Skeleton>\r\n                </div>\r\n            }\r\n        </div>    \r\n    );\r\n}\r\n\r\nexport default ChallengeContent;","import React,{useEffect, useState} from 'react';\r\nimport {TokenAuthentication} from './Api/auth.api'\r\n\r\n\r\n\r\nfunction AuthGaurd({children}) {\r\n\r\n    const [status,setstatus] = useState(false);\r\n    useEffect(()=>{\r\n        let payload = TokenAuthentication();\r\n        if(payload === false){\r\n            window.location = '/login'\r\n            \r\n        }\r\n        else{\r\n            setstatus(true);\r\n        }\r\n    },[])\r\n    return (<div>\r\n        {status ? children : \"\"}\r\n    </div>);\r\n}\r\n\r\nexport default AuthGaurd;\r\n","import React from 'react';\r\nimport NavigationMenu from '../NavigationMenu';\r\nimport ChallengeContent from './ChallengeContent';\r\nimport AuthGaurd from '../authGaurd';\r\n\r\nfunction Challenge() {\r\n    return(\r\n        <div>\r\n            <AuthGaurd>\r\n                <NavigationMenu></NavigationMenu>\r\n\r\n                <ChallengeContent></ChallengeContent>\r\n            </AuthGaurd>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Challenge;","import React from 'react'\r\n\r\nfunction BoxTitle(props) {\r\n    return(\r\n        <div className=\"box-title\">\r\n            <p>{props.title}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default BoxTitle;","\r\nimport fetch from 'node-fetch';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport NavigationMenu from './NavigationMenu';\r\nimport BoxTitle from './BoxTitile';\r\nimport {Link} from 'react-router-dom'\r\nimport {loginProcess,getToken,TokenAuthentication} from './Api/auth.api';\r\n\r\n\r\n    \r\n\r\n\r\n\r\nfunction LoginPage() {\r\n    \r\n    // const [username,setusername] = useState(\"\");\r\n    const [error,setError] = useState(false);\r\n    const [isLoading,setisLoading] = useState(false)\r\n    let username=\"\",password=\"\";\r\n\r\n    useEffect(() => {\r\n        if(getToken()){\r\n            let payload = TokenAuthentication();\r\n            window.location = '/profile/'+payload.username;\r\n        }\r\n        console.log(username,password)\r\n    },[])\r\n    \r\n    return(\r\n\r\n        \r\n        <div>\r\n\r\n            <NavigationMenu></NavigationMenu>\r\n            {error === true ? \r\n            <div className=\"alert-heading text-center p-1 m-auto bg-danger text-light alert-animation\" style={{width: \"30%\",borderRadius: \"5px\",\"fontSize\": \"1.2rem\"}}>\r\n                Incorrect Credentials\r\n            </div> \r\n            \r\n            : ''}\r\n\r\n            <div className=\"box\">\r\n                <BoxTitle title=\"Login\"></BoxTitle>\r\n                <div className={isLoading ? \"box-content-dimension loading\" : \"box-content-dimension\"}>\r\n                    <div className=\"box-form\">\r\n                        <label for=\"username\">Username:</label>\r\n                        <input type=\"text\" placeholder=\"Enter Username\" onChange={(e)=>{username = e.target.value}}></input>\r\n                        <label for=\"password\">Password:</label>\r\n                        <input type=\"password\" placeholder=\"Enter Password\" onChange={(e)=>{password = e.target.value}}></input>\r\n                    </div>\r\n                    <button className=\"shadow\" onClick={async (e) => {\r\n                        \r\n                        setisLoading(true);\r\n                        let result = await loginProcess(username,password)\r\n                        e.target.previousSibling.childNodes[1].value = \"\";\r\n                        e.target.previousSibling.childNodes[3].value = \"\";\r\n                        setisLoading(false);\r\n                        if(!result || result === false){\r\n                            console.log(\"Error\", result)\r\n                            setError(true);\r\n                            setTimeout(() => {\r\n                                setError(false);\r\n                            },5000)\r\n                        }\r\n                        \r\n                        }}>{isLoading ? \"Logging...\" : \"Login\"}</button>\r\n                    <Link to=\"/register\">Create an Account</Link>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","import React, { useRef, Suspense } from 'react';\r\nimport {Canvas,useFrame,useLoader} from 'react-three-fiber';\r\nimport {OrbitControls,Stars} from '@react-three/drei';\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\n\r\nlet radius = 500;\r\nconst Leaderboard = ({position}) => {\r\n    const mesh = useRef();\r\n    let i = {\r\n        current: 1200\r\n    }\r\n    useFrame(() => {\r\n        mesh.current.rotation.y -= 0.01;\r\n        mesh.current.position.x = (radius * Math.cos(2 * Math.PI * (i.current) / 1200)) ;\r\n        mesh.current.position.z = (radius * Math.sin(2 * Math.PI * (i.current) / 1200)) - 100 ;\r\n        i.current--;\r\n        if(i.current<1){\r\n            i.current=1200\r\n        }\r\n    })\r\n    // useFrame(() => {mesh.current})\r\n    const gltf = useLoader(GLTFLoader, \"Leaderboard.glb\");\r\n    return <mesh onPointerOver={() => document.body.style.cursor = \"pointer\"} onPointerOut={() => document.body.style.cursor = \"default\"} onClick={() => {window.location=\"/leaderboard\"}} onPointerDown={() => {window.location=\"/leaderboard\"}}><primitive ref={mesh} object={gltf.scene} scale={[2,2,2]} position={position} /></mesh>\r\n  };\r\nconst Challenge = ({position}) => {\r\n    const mesh = useRef();\r\n    let i = {\r\n        current: 600\r\n    }\r\n    useFrame(() => {\r\n        mesh.current.rotation.y -= 0.01;\r\n        mesh.current.position.x = (radius * Math.cos(2 * Math.PI * (i.current) / 1200)) ;\r\n        mesh.current.position.z = (radius * Math.sin(2 * Math.PI * (i.current) / 1200)) - 100 ;\r\n        i.current--;\r\n        if(i.current<1){\r\n            i.current=1200\r\n        }\r\n    })\r\n    // useFrame(() => {mesh.current})\r\n    const gltf = useLoader(GLTFLoader, \"challenge.glb\");\r\n    return <mesh onPointerOver={() => document.body.style.cursor = \"pointer\"} onPointerOut={() => document.body.style.cursor = \"default\"} onClick={() => {window.location=\"/challenge\"}} onPointerDown={() => {window.location=\"/challenge\"}}><primitive ref={mesh} object={gltf.scene} scale={[2,2,2]} position={position} /></mesh>\r\n  };\r\nconst About = ({position}) => {\r\n    const mesh = useRef();\r\n    let i = {\r\n        current: 300\r\n    }\r\n    useFrame(() => {\r\n        mesh.current.rotation.y -= 0.01;\r\n        mesh.current.position.x = (radius * Math.cos(2 * Math.PI * (i.current) / 1200)) ;\r\n        mesh.current.position.z = (radius * Math.sin(2 * Math.PI * (i.current) / 1200)) - 100 ;\r\n        i.current--;\r\n        if(i.current<1){\r\n            i.current=1200\r\n        }\r\n    })\r\n    // useFrame(() => {mesh.current})\r\n    const gltf = useLoader(GLTFLoader, \"about.glb\");\r\n    return <mesh onPointerOver={() => document.body.style.cursor = \"pointer\"} onPointerOut={() => document.body.style.cursor = \"default\"} onClick={() => {window.location=\"/about\"}} onPointerDown={() => {window.location=\"/about\"}}><primitive ref={mesh} object={gltf.scene} scale={[2,2,2]} position={position} /></mesh>\r\n  };\r\n//   const Profile = ({position}) => {\r\n//     const mesh = useRef();\r\n//     let i = {\r\n//         current: 900\r\n//     }\r\n//     useFrame(() => {\r\n//         mesh.current.rotation.y -= 0.01;\r\n//         mesh.current.position.x = (radius * Math.cos(2 * Math.PI * (i.current) / 1200)) ;\r\n//         mesh.current.position.z = (radius * Math.sin(2 * Math.PI * (i.current) / 1200)) - 100 ;\r\n//         i.current--;\r\n//         if(i.current<1){\r\n//             i.current=1200\r\n//         }\r\n//     })\r\n//     // useFrame(() => {mesh.current})\r\n//     const gltf = useLoader(GLTFLoader, \"Profile.glb\");\r\n//     return <mesh onPointerOver={() => document.body.style.cursor = \"pointer\"} onPointerOut={() => document.body.style.cursor = \"default\"} onClick={() => {window.location = \"/login\"}} onPointerDown={() => {window.location = \"/login\"}}><primitive ref={mesh} object={gltf.scene} scale={[2,2,2]} position={position} /></mesh>\r\n//   };\r\n\r\nfunction UpsolveText(){\r\n    const mesh = useRef();  \r\n    // useFrame(()=>{ mesh.current.rotation.x=-300})\r\n    const gltf = useLoader(GLTFLoader, \"UpsolveText.glb\");\r\n    return <mesh onPointerOver={() => document.body.style.cursor = \"pointer\"} onPointerOut={() => document.body.style.cursor = \"default\"} onClick={() => {window.location=\"/\"}} onPointerDown={() => {window.location=\"/\"}}><primitive ref={mesh} object={gltf.scene} scale={[3,3,3]} position={[0,10,0]} /></mesh>\r\n}\r\n  \r\n\r\n\r\n\r\nfunction HomePage() {\r\n\r\n    \r\n\r\n\r\n    return(\r\n        <>\r\n        <Canvas \r\n            className=\"canvas\"\r\n            style={{width: window.innerWidth,height: window.innerHeight,minWidth: \"100vw\",minHeight: \"100vh\"}}\r\n            colorManagement\r\n            shadowMap\r\n            camera = {{position: [10,300,800], fov: 100,far:5000}}\r\n            pixelRatio={Math.min(2,  1)}\r\n\r\n        >\r\n            <ambientLight intensity={0.3}></ambientLight>\r\n            <directionalLight\r\n                position={[0,-10,10]}\r\n                intensity={1.5}\r\n            ></directionalLight>\r\n            <pointLight position={[-10,0,-20]} intensity={0.5}></pointLight>\r\n            <pointLight position={[0,-10,0]} intensity={1.5}></pointLight>\r\n            <group>\r\n                <Suspense fallback={null}>\r\n                    <UpsolveText></UpsolveText>\r\n                    <Leaderboard position={[radius * Math.cos(2 * Math.PI * (1200) / 1200),-20,radius * Math.sin(2 * Math.PI * (1200) / 1200) - 100]} />\r\n                    \r\n                    {/* <Profile position={[radius * Math.cos(2 * Math.PI * (900) / 1200),0,radius * Math.sin(2 * Math.PI * (900) / 1200) - 100]} /> */}\r\n                    <Challenge position={[radius * Math.cos(2 * Math.PI * (600) / 1200),-20,radius * Math.sin(2 * Math.PI * (600) / 1200) - 100]} />\r\n                    <About position={[radius * Math.cos(2 * Math.PI * (300) / 1200),-20,radius * Math.sin(2 * Math.PI * (300) / 1200) - 100]} />\r\n\r\n                </Suspense>\r\n                \r\n                <Stars radius={1000} count={5000} depth={100}></Stars>\r\n                <OrbitControls minPolarAngle={Math.PI / 3}></OrbitControls>\r\n            </group>\r\n        </Canvas>\r\n        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default HomePage;","import React, { useEffect,useState } from 'react';\r\n\r\n\r\nfunction LogoutPage() {\r\n    \r\n    useEffect(()=>{\r\n        window.localStorage.setItem(\"token\",null);\r\n        window.location = \"/login\"\r\n    },[])\r\n    return(\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default LogoutPage;","import NavigationMenu from './NavigationMenu'\r\n\r\nfunction ErrorPage() {\r\n    return(\r\n        <div>\r\n            <NavigationMenu></NavigationMenu>\r\n            \r\n                <p className=\"text-danger font-weight-bolder min-vw-100 display-4 d-flex justify-content-center align-items-center\" style={{height: \"80vh\"}}>Error 404: Page not Found</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;","import React,{useRef,useState} from 'react';\r\n// let LineChart = require('react-chartjs').Line\r\nimport Chart from 'react-apexcharts';\r\nimport {updateUser} from '../Api/auth.api';\r\nfunction  ProfilePage(props) {\r\n\r\n    const country_list = require('country-list');\r\n    let countries = [];\r\n    country_list.getNames().map((country) => {\r\n        countries.push(<option value={country}>{country}</option>)\r\n    })\r\n    const [isloading,setisloading] = useState(false);\r\n    const firstName = useRef(null);\r\n    const lastName = useRef(null);\r\n    const bio = useRef(null);\r\n    const CountryRef = useRef(null);\r\n    const institutionRef = useRef(null);\r\n    let problems = [];\r\n    let series= [{\r\n        name: 'Upsolved',\r\n        data: []\r\n      }];\r\n     let options= {\r\n        grid:{\r\n            show: false,\r\n        },\r\n        \r\n        chart: {\r\n            \r\n          type: 'area',\r\n          stacked: false,\r\n          height: 350,\r\n          animations:{\r\n              enabled:true,\r\n          },\r\n          \r\n          zoom: {\r\n            type: 'x',\r\n            enabled: true,\r\n            autoScaleYaxis: true\r\n          },\r\n          toolbar: {\r\n            autoSelected: 'zoom'\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        markers: {\r\n          size: 5,\r\n        },\r\n        title: {\r\n          text: 'Upsolved Questions',\r\n          align: 'left'\r\n        },\r\n        fill: {\r\n          type: 'gradient',\r\n          gradient: {\r\n            shadeIntensity: 1,\r\n            inverseColors: false,\r\n            opacityFrom: 0.5,\r\n            opacityTo: 0,\r\n            stops: [0, 90, 100]\r\n          },\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: 'Number of Questions'\r\n          },\r\n          min:0\r\n        },\r\n        xaxis: {\r\n         \r\n          formate: \"D-MM-YYYY\"\r\n        },\r\n        tooltip: {\r\n          shared: false,\r\n        },\r\n        stroke:{\r\n            curve: 'straight'\r\n        }\r\n      };   \r\n    \r\n     \r\n    let maxUpsolved = parseInt(0);\r\n    let UpsolveQuestion = props.user.UpsolveStreak;\r\n    \r\n    if(UpsolveQuestion && UpsolveQuestion !== null && UpsolveQuestion !== undefined){\r\n        Object.keys(UpsolveQuestion).map((key,i) => {\r\n            let problemDescription = [];\r\n            series[0].data.push({'x': key,'y': UpsolveQuestion[key].length});\r\n            maxUpsolved = Math.max(maxUpsolved,UpsolveQuestion[key].length);\r\n            UpsolveQuestion[key].forEach((value) => {\r\n                if(value.contestId){\r\n                    value.contestLink = \"https://codeforces.com/contest/\"+value.contestId;\r\n                    value.problemLink = \"https://codeforces.com/contest/\"+value.contestId+\"/problem/\"+value.index;\r\n                }\r\n                \r\n                problemDescription.push(\r\n                    <div className=\"row offset-0 p-lg-1 p-md-1 offset-md-1 offset-lg-1 ml-0\" style={{fontSize: \"1rem\",fontFamily: \"open-sans\",fontWeight: \"600\",width: \"100%\"}}>\r\n                                \r\n                        <p className=\"text-center col-4 col-md-5 col-lg-6 m-auto\" style={{whiteSpace:\"nowrap\",overflowX: \"hidden\",textOverflow: \"ellipsis\"}}>{value.name ? <a href={value.problemLink} target=\"_blank\">{value.name}</a> : \"-\"}</p>\r\n                        <p className=\"text-center col-4 col-md-3 col-lg-3 m-auto\">{value.contestId ? <a href={value.contestLink} target=\"_blank\">{value.contestId}</a> : \"-\"}</p>\r\n                        <p className=\"text-center col-4 col-md-3 col-lg-3 m-auto\">{value.rating ? value.rating : \"-\"}</p>\r\n                    </div>\r\n                )\r\n            })\r\n            problems.unshift(\r\n                <li id={\"#\"+key} class=\"timeline-sm-item pl-1\">\r\n                \r\n                    <span class=\"timeline-sm-date\">{key}</span>\r\n                    <div className=\"row p-0 pt-3 pl-0 d-flex justify-content-between align-items-center flex-column\">\r\n                        {problemDescription}\r\n                    </div>\r\n                </li>\r\n            )\r\n            \r\n        })\r\n    }\r\n    return(\r\n        \r\n        <div class=\"container mt-4\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-4 col-xl-4\">\r\n                <div class=\"card-box text-center\">\r\n                    <img src=\"https://bootdey.com/img/Content/avatar/avatar7.png\" class=\"rounded-circle avatar-xl img-thumbnail\" alt=\"profile-image\" />\r\n        \r\n                    <h4 class=\"mb-0\">{props.user.username}</h4>\r\n                    \r\n        \r\n                    <div class=\"text-left mt-3\">\r\n                        <h4 class=\"font-13 text-uppercase\">About Me :</h4>\r\n                        <p class=\"text-muted font-13 mb-3\">\r\n                            {props.user.bio ? props.user.bio : \"A passionate programmer\"}\r\n                        </p>\r\n                        <p class=\"text-muted mb-2 font-13\"><strong>Full Name :</strong> <span class=\"ml-2\">{props.user.name ? props.user.name : \"-\"}</span></p>\r\n        \r\n                        \r\n        \r\n                        <p class=\"text-muted mb-2 font-13\"><strong>Institution :</strong> <span class=\"ml-2 \">{props.user.institution ? props.user.institution : \"-\"}</span></p>\r\n        \r\n                        <p class=\"text-muted mb-1 font-13\"><strong>Location :</strong> <span class=\"ml-2\">{props.user.country ? props.user.country : \"-\"}</span></p>\r\n                        <p class=\"text-muted mb-1 font-13\"><strong>Max-Upsolved :</strong> <span class=\"ml-2 text-success\">{parseInt(maxUpsolved)}</span></p>\r\n                        <p class=\"text-muted mb-1 font-13\"><strong>Streak :</strong> <span class=\"ml-2 text-success\">{parseInt(props.user.streak ? props.user.streak : \"0\")}</span></p>\r\n                    </div>\r\n        \r\n                \r\n                </div> \r\n        \r\n\r\n        \r\n            </div> \r\n            <div class=\"col-lg-8 col-xl-8\">\r\n                <div class=\"card-box\">\r\n                \r\n                    <ul class=\"nav nav-pills navtab-bg\">\r\n                        <li class=\"nav-item\">\r\n                            <a href=\"#about-me\" data-toggle=\"tab\" aria-expanded=\"true\" class=\"nav-link ml-0 active\">\r\n                                Graph\r\n                            </a>\r\n                        </li>\r\n                        {props.loggedinUser === true ?\r\n                        <li class=\"nav-item\">\r\n                            <a href=\"#settings\" data-toggle=\"tab\" aria-expanded=\"false\" class=\"nav-link\">\r\n                                <i class=\"mdi mdi-settings-outline mr-1\"></i>Settings\r\n                            </a>\r\n                        </li>\r\n                        :\r\n                        ''\r\n                        } \r\n                    </ul>\r\n                          \r\n                    <div class=\"tab-content\">\r\n                        \r\n                        <div class=\"tab-pane show active pt-5\" id=\"about-me\">\r\n\r\n                        \r\n                       \r\n                        <Chart options={options} series={series} type=\"area\" height={350} />\r\n\r\n    \r\n                        </div>\r\n                        \r\n                        {/* <div class=\"tab-pane\" id=\"settings\"><h1>Hello</h1></div> */}\r\n                         {props.loggedinUser === true ?\r\n                         <div class=\"tab-pane\" id=\"settings\">\r\n                            <form>\r\n                                <h5 class=\"mb-3 text-uppercase bg-light p-2\"><i class=\"mdi mdi-account-circle mr-1\"></i> Personal Info</h5>\r\n                                \r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"firstname\">First Name</label>\r\n                                            <input type=\"text\" ref={firstName} class=\"form-control\" id=\"firstname\" defaultValue={props.user.name ? props.user.name.split(' ')[0] : ''} />\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div class=\"col-md-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"lastname\">Last Name</label>\r\n                                            <input type=\"text\" ref={lastName} class=\"form-control\" id=\"lastname\" defaultValue={props.user.name ? props.user.name.split(' ')[1] : ''} />\r\n                                        </div>\r\n                                    </div> \r\n                                </div> \r\n                                <div class=\"row\">\r\n                                    <div class=\"col-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"userbio\">Bio</label>\r\n                                            <textarea class=\"form-control\" ref={bio} id=\"userbio\" rows=\"4\" defaultValue={props.user.bio ? props.user.bio : \"Write Something About yourself\"}></textarea>\r\n                                        </div>\r\n                                    </div> \r\n                                </div> \r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"Country\">Country</label>\r\n                                            <select  class=\"form-control\" ref={CountryRef} id=\"Country\" >\r\n                                                <option defaultValue={props.user.country}>{props.user.country}</option>\r\n                                                {countries}\r\n                                            </select>\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"institution\">Institution</label>\r\n                                            <input type=\"text\" ref={institutionRef} class=\"form-control\" id=\"institution\" value={props.user.institution}  />\r\n                                            \r\n                                        </div>\r\n                                    </div> \r\n                                </div> \r\n                                \r\n                                \r\n                                <div class=\"text-right\">\r\n                                    <button type=\"submit\" onClick={async (e)=> {\r\n                                        e.preventDefault();\r\n                                        setisloading(true);\r\n                                        await updateUser(props.user.username,firstName.current.value,lastName.current.value,CountryRef.current.value,institutionRef.current.value,bio.current.value)\r\n                                        setisloading(false);\r\n                                        window.location.reload();\r\n                                        }} class=\"btn btn-success waves-effect waves-light mt-2\"><i class=\"mdi mdi-content-save\" ></i> {isloading ? \"Saving...\" : \"Save\"}</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        :\r\n                        ''\r\n                        }      \r\n                    </div>  \r\n                </div> \r\n        \r\n            </div> \r\n\r\n            <div className=\"row card-box col-12 mb-4\">\r\n                <div className=\"col-12 col-md-11 col-lg-11\">\r\n                        <h5 class=\"mb-4 text-uppercase\"><i class=\"mdi mdi-briefcase mr-1\"></i>\r\n                            Upsolved Question</h5>\r\n        \r\n                            <ul class=\"list-unstyled timeline-sm\" style={{maxHeight: \"100%\",overflowY:\"scroll\",width: \"100%\"}}>\r\n                                <li>\r\n                                \r\n                                        <div className=\"row mb-2 ml-3 p-1 pr-1 pl-2 p-lg-2 p-md-2 offset-md-1 offset-lg-1\" style={{backgroundColor: \"#f1f5f7\",borderColor: \"#dee2e6\",fontSize: \"1rem\",fontFamily: \"open-sans\",fontWeight: \"600\",color: \"#6c757d\",minWidth: \"90%\"}}>\r\n                                            \r\n                                            <p className=\"text-center col-3 col-md-5 col-lg-6 m-auto ml-0\">Name</p>\r\n                                            <p className=\"text-center col-4 col-md-3 col-lg-3 m-auto\">ConestId</p>\r\n                                            <p className=\"text-center col-4 col-md-3 col-lg-3 m-auto ml-5\">Rating</p>\r\n                                        </div>\r\n                                    \r\n                                        \r\n                                </li>\r\n                                {problems}\r\n                                \r\n                            </ul> \r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        \r\n    \r\n    \r\n    )\r\n}\r\n\r\nexport default ProfilePage;","import React, { useEffect, useState } from 'react'\r\nimport NavigationMenu from '../NavigationMenu'\r\nimport {getUserByname} from '../Api/problem.api';\r\nimport ProfilePage from './ProfilePage'\r\nimport {getToken,TokenAuthentication} from '../Api/auth.api'\r\n\r\nfunction ProfileRoute(props) {\r\n    \r\n    const [user,setuser] = useState({});\r\n    const paramUsername = props.match.params.username;\r\n    const [loggedinUser,setloggedinUser] = useState(false)\r\n    \r\n\r\n    useEffect(async () => {\r\n        if(paramUsername === undefined){\r\n        \r\n            window.location = '/error';\r\n            \r\n            \r\n        }\r\n        \r\n        getUserByname(paramUsername).then((User) => {\r\n            if(!User){\r\n                console.log(User);\r\n                window.location = '/error';\r\n                return;\r\n            }\r\n            else{\r\n                let loggedinUsername = null;\r\n                if(getToken()){\r\n                    loggedinUsername = TokenAuthentication().username;      \r\n                }\r\n                if(loggedinUsername === User.username){\r\n                    setloggedinUser(true);\r\n                }\r\n                setuser(User);\r\n            }\r\n        })\r\n        \r\n        \r\n    },[])\r\n    \r\n    \r\n    \r\n    return (\r\n        <div>\r\n           <NavigationMenu></NavigationMenu> \r\n           {user._id ? <ProfilePage user={user} loggedinUser={loggedinUser}></ProfilePage> : <></>}\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileRoute;","\r\nimport fetch from 'node-fetch';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {getUserByname} from './Api/problem.api'\r\nimport {getFirstName,registrationProcess,getToken,TokenAuthentication} from './Api/auth.api'\r\nimport NavigationMenu from './NavigationMenu';\r\nimport BoxTitle from './BoxTitile';\r\nimport {Link} from 'react-router-dom'\r\nimport Countdown from 'react-countdown';\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\nfunction RegisterPage() {\r\n    \r\n    \r\n    const [isloading,setisLoading] = useState(false);\r\n    const [Error,setError] = useState(\"\");\r\n    const [username,setusername] = useState(\"\");\r\n    const [password,setpassword] = useState(\"\");\r\n    const [confirmpassword,setconfirmpassword] = useState(\"\");\r\n    const [country,setcountry] = useState(\"\");\r\n    const [institution,setinstitution] = useState(\"\");\r\n    const [bio,setbio] = useState(\"\");\r\n    const [validatePassword,setvalidatePassword] = useState(\"Please fill out this field\");\r\n    const [optPgae,setoptPage] = useState(false);\r\n    const [optCode,setoptCode] = useState(false);\r\n    const [timer,settimer] = useState(0);\r\n    const country_list = require('country-list');\r\n\r\n    useEffect(()=>{\r\n\r\n        if(getToken()){\r\n            let payload = TokenAuthentication();\r\n            window.location = '/profile/'+payload.username;\r\n        }\r\n        \r\n        if(timer>0){\r\n            setTimeout(()=> {settimer(timer - 1)},1000);\r\n        }\r\n\r\n        \r\n    },[timer])\r\n\r\n\r\n    let init = ()=>{\r\n        setusername(\"\");\r\n        setpassword(\"\");\r\n        setconfirmpassword(\"\");\r\n        setcountry(\"\");\r\n        setinstitution(\"\");\r\n        setbio(\"\");\r\n        setvalidatePassword(\"Please fill out this field\")\r\n        setError(\"\");\r\n        setisLoading(false);\r\n        setoptCode(false);\r\n        settimer(0);\r\n    }\r\n    \r\n    let checkPassword = (e) => {\r\n        let psw = e.target.value;\r\n\r\n        if(psw.length < 8){\r\n            setvalidatePassword(\"Atleast 8 characters required\");\r\n            return;\r\n        }\r\n\r\n        if(!psw.match(/[a-z]/g)){\r\n            setvalidatePassword(\"Lowercase character is required\");\r\n            return;\r\n        }\r\n\r\n        if(!psw.match(/[A-Z]/g)){\r\n            setvalidatePassword(\"Uppercase character is required\");\r\n            return;\r\n        }\r\n\r\n        if(!psw.match(/[0-9]/g)){\r\n            setvalidatePassword(\"A digit is required\");\r\n            return;\r\n        }\r\n\r\n        if(!psw.match(/[!\"#$%&'()*+,-.:;<=>?@[\\]^_`{|}~]/)){\r\n            setvalidatePassword(\"Special character is required\");\r\n            return;\r\n        }\r\n        setvalidatePassword(true);\r\n    }\r\n\r\n    const renderer = (timer) => {\r\n        let minutes = parseInt(timer/60);\r\n        let seconds = parseInt(timer - (minutes*60));\r\n        if (timer<=0) {\r\n          \r\n          if(optPgae && !isloading){\r\n            init();\r\n            setoptPage(false);\r\n          }\r\n          return <span>{\"00:00\"}</span>    \r\n        }\r\n        else{ // Render a countdown\r\n        return <span>{\"0\"+minutes}:{seconds<10 ? \"0\"+seconds : seconds}</span>;\r\n        }\r\n      };\r\n\r\n    return(\r\n\r\n        \r\n        <div>\r\n\r\n            <NavigationMenu></NavigationMenu>\r\n            \r\n            {Error !== \"\" ? \r\n            <div className=\"alert-heading text-center p-1 m-auto bg-danger text-light alert-animation\" style={{width: \"30%\",borderRadius: \"5px\",\"fontSize\": \"1.2rem\"}}>\r\n                {Error}\r\n            </div> \r\n            \r\n            : ''}\r\n\r\n            <div className=\"box\">\r\n                <BoxTitle title=\"Register\"></BoxTitle>\r\n                {optPgae === false ?\r\n                <div className={\"box-content-dimension mb-5\"+ (isloading ? \" loading\" : \"\")}>\r\n                    \r\n                    <div className=\"box-form p-4\">\r\n                        \r\n                            <div class=\"form-group\">\r\n                                <label>Username:</label>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Enter Code-Forces Handle\" onChange={(e) => {setusername(e.target.value)}} required />\r\n                                {username === \"\" ? <div class=\"text-danger\">Please fill out this field.</div> : ''}\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label>Country: <select onChange={(e) => {setcountry(e.target.value)}}>\r\n                                                    <option value=\"\">--Select--</option>\r\n                                                    {country_list.getNames().map((ct) => <option value={ct}>{ct}</option>)}\r\n                                                </select>\r\n                                </label>\r\n                                \r\n                            </div>\r\n                            <div class=\"form-group\" style={{display: \"none\"}}>\r\n                                <label>Institution: <select onChange={(e) => {setinstitution(e.target.value)}}>\r\n                                                    <option value=\"India\">India</option>\r\n                                                </select>\r\n                                </label>\r\n                                \r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label>Password:</label>\r\n                                <input type=\"password\" class=\"form-control\" onChange={(e) => {setpassword(e.target.value);checkPassword(e)}} placeholder=\"Enter Password\" required />\r\n                                {validatePassword !== true ? <div class=\"text-danger\">{validatePassword}</div> : ''}\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label>Confirm Password:</label>\r\n                                <input type=\"password\" class=\"form-control\" onChange={(e) => {setconfirmpassword(e.target.value)}} placeholder=\"Confrim Password\" required />\r\n                                {confirmpassword === \"\" ? <div className=\"text-danger\">Please fill out this field.</div> : (confirmpassword !== password ? <div className=\"text-danger\">Should match the password</div> : '')}\r\n                                \r\n                            </div>\r\n                            \r\n                        \r\n                    </div>\r\n                    <button type=\"submit\" className=\"shadow\" onClick={async () => {\r\n                        if(validatePassword !== true || username === \"\" || password !== confirmpassword){return}\r\n                        setisLoading(true);\r\n                        let result = await getUserByname(username);\r\n                        console.log(result);\r\n                        if(!result || result === false){\r\n                            var OTP = Math.ceil(Math.random()*1000000);\r\n                            \r\n                            \r\n                            \r\n                            \r\n                            settimer(90);\r\n                            setoptCode(OTP);\r\n                            setisLoading(false);\r\n                            setoptPage(true);\r\n                        }\r\n                        else{\r\n                            setisLoading(false);\r\n                            setError(\"User name already exists\");\r\n                            \r\n\r\n                            setTimeout(() => {\r\n                                setError(\"\");\r\n                            },5000)\r\n                            return;\r\n                        }\r\n                    }}>{isloading ? \"Loading...\" : \"Next\"}</button>\r\n\r\n                            \r\n                    <Link to=\"/login\">Already Have an account</Link>\r\n                            \r\n                </div>\r\n                :\r\n                <div className={\"box-content-dimension mb-5\"+(isloading ? \" loading\" : \"\")}>\r\n                    <h1>{renderer(timer)}</h1>\r\n                    <p>Change the first name of your codeForces handle to this \"<b>{optCode}</b>\" (Without Quote). <br></br><strong>{\"CodeForces --> Profile --> Settings --> Social --> Change your first name\"}</strong></p>\r\n                    <button className={isloading ? \" loading\" : \"\"} onClick={async () => {\r\n                        setisLoading(true);\r\n                        let result = await getFirstName(username);\r\n                        \r\n                        if(parseInt(result) !== parseInt(optCode)){\r\n                            setisLoading(false);\r\n                            init();\r\n                            setError(\"Unable to verify\");\r\n                            setoptPage(false);\r\n                            setTimeout(() => {\r\n                                setError(\"\");\r\n                            },5000)\r\n                        }\r\n                        else{\r\n                            let register = await registrationProcess(username,password,country,institution,bio);\r\n                            if(!register || register===false){\r\n                                setisLoading(false);\r\n                                init();\r\n                                setError(\"Unable to Register\");\r\n                                setoptPage(false);\r\n                            }\r\n                            else{\r\n                                setisLoading(false);\r\n                                init();\r\n                                setError(\"\");\r\n                                setoptPage(false)\r\n                                setTimeout(() => {\r\n                                    setError(\"\");\r\n                                },5000)\r\n                                window.location = \"/login\";\r\n                            }\r\n                        }\r\n                    }}>{isloading ? \"Verifying...\" : \"Verify\"}</button>\r\n                    <Link to=\"/login\">Already Have an account</Link>\r\n                </div>\r\n                }\r\n            </div>\r\n\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","import {config as cf} from '../constants';\r\n\r\nlet config = cf.url;\r\n\r\nasync function  AddFeedback(name,email,feedback) {\r\n    \r\n    return fetch(config+'/api/feedback/add',{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            name: name,\r\n            email: email,\r\n            feedback: feedback\r\n        })\r\n    }).then(res => res.json())\r\n    \r\n}\r\n\r\nexport {AddFeedback}","import React, { useState,useRef } from 'react'\r\nimport { AddFeedback } from '../Api/feedback.api';\r\n\r\nexport default function ContactUs() {\r\n\r\n    const [loading,setloading] = useState(false);\r\n    const name = useRef(\"\");\r\n    const email = useRef(\"\");\r\n    const feedback = useRef(\"\");\r\n\r\n    let HandleSubmit = async (e)=>{\r\n        e.preventDefault();\r\n        setloading(true);\r\n        if(name.current.value === \"\" || email.current.value === \"\" || feedback.current.value === \"\"){\r\n            setloading(false);\r\n            return;\r\n        }\r\n        let response = await AddFeedback(name.current.value,email.current.value,feedback.current.value);\r\n        name.current.value = \"\";\r\n        email.current.value = \"\";\r\n        feedback.current.value = \"\";\r\n        setloading(false);\r\n    }\r\n\r\n    return (\r\n        <section className=\"col-12 mt-5\">\r\n            <h1 className=\"text-center mb-5 team-section-title\">Help Us To Improve</h1>\r\n            <form disabled={loading} className=\"d-flex justify-content-between align-items-center flex-column col-lg-6 col-md-6 col-10 mx-auto feedback-form mb-5\" style={{rowGap: \"1rem\"}} onSubmit={(e) => {HandleSubmit(e)}}>\r\n                <input type=\"text\" ref={name} required placeholder=\"Name\" className=\"w-50\"></input>\r\n                <input type=\"email\" required ref={email} placeholder=\"Email\" className=\"w-50\"></input>\r\n                <textarea rows=\"3\" required ref={feedback} placeholder=\"Feedback\" className=\"w-50\"></textarea>\r\n                <button type=\"submit\" className=\"btn btn-primary text-center\">{loading ? \"Submitting..\" : \"Submit\"}</button>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Team() {\r\n\r\n    const [descnum,setdescNum] = useState(0);\r\n    let description = [];\r\n    description.push([\"Yash Doshi\",\"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\"]);\r\n    description.push([\"Shivam Thakker\",\"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\"]);\r\n    description.push([\"Parshwa Shah\",\"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\"]);\r\n    description.push([\"Jay Mehta\",\"orem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\"]);\r\n\r\n    return (\r\n        <section className=\"col-12 mt-5 p-3\">\r\n            <h1 className=\"text-center team-section-title\">Team Members</h1>\r\n            <div className=\"position-relative py-5 mt-5 team-parent\">\r\n                <div className=\"position-absolute team-title\">\r\n                    <h3 className=\"text-center\">{descnum!==0 ? description[descnum - 1][0] : ''}</h3>\r\n                    <p className=\"text-center\">{descnum!==0 ? description[descnum - 1][1] : 'Tap on any image'}</p> \r\n                </div>\r\n                <div className=\"mx-auto position-relative team-ring\">\r\n                    \r\n                    <div className={\"icon\" + (descnum === 1 ? \" icon-active\" :  \"\")} onClick={() => setdescNum(1)} style={{top: '0%', left: \"50%\", transform: 'translate(-50%,-50%)'}}><img className=\"icon1\" src={'https://source.unsplash.com/random'}></img></div>\r\n                    <div className={\"icon\" + (descnum === 2 ? \" icon-active\" :  \"\")} onClick={() => setdescNum(2)} style={{top: '50%', left: \"0%\", transform: 'translate(-50%,-50%)'}}><img className=\"icon1\" src={'https://source.unsplash.com/random'}></img></div>\r\n                    <div className={\"icon\" + (descnum === 3 ? \" icon-active\" :  \"\")} onClick={() => setdescNum(3)} style={{top: '100%', left: \"50%\", transform: 'translate(-50%,-50%)'}}><img className=\"icon1\" src={'https://source.unsplash.com/random'}></img></div>\r\n                    <div className={\"icon\" + (descnum === 4 ? \" icon-active\" :  \"\")} onClick={() => setdescNum(4)} style={{top: '50%', left: \"100%\", transform: 'translate(-50%,-50%)'}}><img className=\"icon1\" src={'https://source.unsplash.com/random'}></img></div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function UpsolveDesc() {\r\n    return (\r\n        <section className=\"col-12 d-flex flex-lg-row flex-md-row flex-column-reverse justify-content-evenly align-items-center py-5 mt-5 mb-5\" style={{minHeight: '70vh',rowGap: '2rem'}}>\r\n            <div className=\"col-lg-5 col-md-6 col-11 mx-auto text-light upsolve-text\">\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n            </div>\r\n            <img src=\"UpsolveLogo1.png\" className=\"col-lg-5 col-md-6 col-11 mx-auto upsolve-image\"></img>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport NavigationMenu from '../NavigationMenu'\r\nimport ContactUs from './ContactUs'\r\nimport Team from './Team'\r\nimport UpsolveDesc from './UpsolveDesc'\r\n\r\nexport default function AboutPage() {\r\n    return (\r\n        <>\r\n            <NavigationMenu></NavigationMenu>\r\n            <UpsolveDesc></UpsolveDesc>\r\n            <Team></Team>\r\n            <ContactUs></ContactUs>\r\n        </>\r\n    )\r\n}\r\n","import './style.css';\r\nimport {BrowserRouter as Router, Link, Route, Switch} from 'react-router-dom';\r\nimport LeaderboardPage from './Leaderboard/LeaderboardPage';\r\nimport Challenge from './Challenge/Challenge'\r\nimport LoginPage from './loginPage';\r\nimport HomePage from './HomePage';\r\nimport LogoutPage from './LogoutPage';\r\nimport ErrorPage from './ErroPage';\r\nimport ProfileRoute from './Profile/ProfileRoute';\r\nimport RegisterPage from './RegisterPage';\r\nimport AboutPage from './About/AboutPage';\r\n\r\nfunction App() {\r\n    return(\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/leaderboard\" component={LeaderboardPage}></Route>\r\n                <Route exact path=\"/challenge\" component={Challenge}></Route>\r\n                <Route exact path=\"/login\" component={LoginPage}></Route>\r\n                <Route exact path=\"/register\" component={RegisterPage}></Route>\r\n                <Route exact path=\"/logout\" component={LogoutPage}></Route>\r\n                <Route exact path=\"/about\" component={AboutPage}></Route>\r\n                <Route exact path=\"/profile/:username\" component={ProfileRoute}></Route>\r\n                <Route exact path=\"/\" component={HomePage}></Route>\r\n                <Route component={ErrorPage}></Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  \r\n    <App />,\r\n  \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}